// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package gen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Result of the operation
type ReturnCode int32

const (
	ReturnCode_SUCCESS               ReturnCode = 0
	ReturnCode_NO_SUBSCRIPTION_ENTRY ReturnCode = 1
	ReturnCode_UNKNOWN_ERROR         ReturnCode = 2
)

var ReturnCode_name = map[int32]string{
	0: "SUCCESS",
	1: "NO_SUBSCRIPTION_ENTRY",
	2: "UNKNOWN_ERROR",
}

var ReturnCode_value = map[string]int32{
	"SUCCESS":               0,
	"NO_SUBSCRIPTION_ENTRY": 1,
	"UNKNOWN_ERROR":         2,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}

func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

// Verbosity Level
type VerbosityLevel int32

const (
	VerbosityLevel_DETAIL VerbosityLevel = 0
	VerbosityLevel_TERSE  VerbosityLevel = 1
	VerbosityLevel_BRIEF  VerbosityLevel = 2
)

var VerbosityLevel_name = map[int32]string{
	0: "DETAIL",
	1: "TERSE",
	2: "BRIEF",
}

var VerbosityLevel_value = map[string]int32{
	"DETAIL": 0,
	"TERSE":  1,
	"BRIEF":  2,
}

func (x VerbosityLevel) String() string {
	return proto.EnumName(VerbosityLevel_name, int32(x))
}

func (VerbosityLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

// Encoding Type Supported
type EncodingType int32

const (
	EncodingType_UNDEFINED EncodingType = 0
	EncodingType_XML       EncodingType = 1
	EncodingType_JSON_IETF EncodingType = 2
	EncodingType_PROTO3    EncodingType = 3
)

var EncodingType_name = map[int32]string{
	0: "UNDEFINED",
	1: "XML",
	2: "JSON_IETF",
	3: "PROTO3",
}

var EncodingType_value = map[string]int32{
	"UNDEFINED": 0,
	"XML":       1,
	"JSON_IETF": 2,
	"PROTO3":    3,
}

func (x EncodingType) String() string {
	return proto.EnumName(EncodingType_name, int32(x))
}

func (EncodingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{2}
}

// Collector endpoints to send data specified as an ip+port combination.
type Collector struct {
	// IP address of collector endpoint
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Transport protocol port number for the collector destination.
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Collector) Reset()         { *m = Collector{} }
func (m *Collector) String() string { return proto.CompactTextString(m) }
func (*Collector) ProtoMessage()    {}
func (*Collector) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

func (m *Collector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collector.Unmarshal(m, b)
}
func (m *Collector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collector.Marshal(b, m, deterministic)
}
func (m *Collector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collector.Merge(m, src)
}
func (m *Collector) XXX_Size() int {
	return xxx_messageInfo_Collector.Size(m)
}
func (m *Collector) XXX_DiscardUnknown() {
	xxx_messageInfo_Collector.DiscardUnknown(m)
}

var xxx_messageInfo_Collector proto.InternalMessageInfo

func (m *Collector) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Collector) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Data associated with a telemetry subscription
type SubscriptionInput struct {
	// List of optional collector endpoints to send data for
	// this subscription.
	// If no collector destinations are specified, the collector
	// destination is assumed to be the requester on the rpc channel.
	CollectorList        []*Collector `protobuf:"bytes,1,rep,name=collector_list,json=collectorList,proto3" json:"collector_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SubscriptionInput) Reset()         { *m = SubscriptionInput{} }
func (m *SubscriptionInput) String() string { return proto.CompactTextString(m) }
func (*SubscriptionInput) ProtoMessage()    {}
func (*SubscriptionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

func (m *SubscriptionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionInput.Unmarshal(m, b)
}
func (m *SubscriptionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionInput.Marshal(b, m, deterministic)
}
func (m *SubscriptionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionInput.Merge(m, src)
}
func (m *SubscriptionInput) XXX_Size() int {
	return xxx_messageInfo_SubscriptionInput.Size(m)
}
func (m *SubscriptionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionInput.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionInput proto.InternalMessageInfo

func (m *SubscriptionInput) GetCollectorList() []*Collector {
	if m != nil {
		return m.CollectorList
	}
	return nil
}

// Data model path
type Path struct {
	// Data model path of interest
	// Path specification for elements of OpenConfig data models
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Regular expression to be used in filtering state leaves
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// If this is set to true, the target device will only send
	// updates to the collector upon a change in data value
	SuppressUnchanged bool `protobuf:"varint,3,opt,name=suppress_unchanged,json=suppressUnchanged,proto3" json:"suppress_unchanged,omitempty"`
	// Maximum time in ms the target device may go without sending
	// a message to the collector. If this time expires with
	// suppress-unchanged set, the target device must send an update
	// message regardless if the data values have changed.
	MaxSilentInterval uint32 `protobuf:"varint,4,opt,name=max_silent_interval,json=maxSilentInterval,proto3" json:"max_silent_interval,omitempty"`
	// Time in ms between collection and transmission of the
	// specified data to the collector platform. The target device
	// will sample the corresponding data (e.g,. a counter) and
	// immediately send to the collector destination.
	//
	// If sample-frequency is set to 0, then the network device
	// must emit an update upon every datum change.
	SampleFrequency uint32 `protobuf:"varint,5,opt,name=sample_frequency,json=sampleFrequency,proto3" json:"sample_frequency,omitempty"`
	// EOM needed for each walk cycle of this path?
	//   For periodic sensor, applicable for each complete reap
	//   For event sensor, applicable when initial dump is over
	//     (same as EOS)
	NeedEom              bool     `protobuf:"varint,6,opt,name=need_eom,json=needEom,proto3" json:"need_eom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{2}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Path) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *Path) GetSuppressUnchanged() bool {
	if m != nil {
		return m.SuppressUnchanged
	}
	return false
}

func (m *Path) GetMaxSilentInterval() uint32 {
	if m != nil {
		return m.MaxSilentInterval
	}
	return 0
}

func (m *Path) GetSampleFrequency() uint32 {
	if m != nil {
		return m.SampleFrequency
	}
	return 0
}

func (m *Path) GetNeedEom() bool {
	if m != nil {
		return m.NeedEom
	}
	return false
}

// Configure subscription request additional features.
type SubscriptionAdditionalConfig struct {
	// limit the number of records sent in the stream
	LimitRecords int32 `protobuf:"varint,1,opt,name=limit_records,json=limitRecords,proto3" json:"limit_records,omitempty"`
	// limit the time the stream remains open
	LimitTimeSeconds int32 `protobuf:"varint,2,opt,name=limit_time_seconds,json=limitTimeSeconds,proto3" json:"limit_time_seconds,omitempty"`
	// EOS needed for this subscription?
	NeedEos              bool     `protobuf:"varint,3,opt,name=need_eos,json=needEos,proto3" json:"need_eos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionAdditionalConfig) Reset()         { *m = SubscriptionAdditionalConfig{} }
func (m *SubscriptionAdditionalConfig) String() string { return proto.CompactTextString(m) }
func (*SubscriptionAdditionalConfig) ProtoMessage()    {}
func (*SubscriptionAdditionalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{3}
}

func (m *SubscriptionAdditionalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionAdditionalConfig.Unmarshal(m, b)
}
func (m *SubscriptionAdditionalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionAdditionalConfig.Marshal(b, m, deterministic)
}
func (m *SubscriptionAdditionalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionAdditionalConfig.Merge(m, src)
}
func (m *SubscriptionAdditionalConfig) XXX_Size() int {
	return xxx_messageInfo_SubscriptionAdditionalConfig.Size(m)
}
func (m *SubscriptionAdditionalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionAdditionalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionAdditionalConfig proto.InternalMessageInfo

func (m *SubscriptionAdditionalConfig) GetLimitRecords() int32 {
	if m != nil {
		return m.LimitRecords
	}
	return 0
}

func (m *SubscriptionAdditionalConfig) GetLimitTimeSeconds() int32 {
	if m != nil {
		return m.LimitTimeSeconds
	}
	return 0
}

func (m *SubscriptionAdditionalConfig) GetNeedEos() bool {
	if m != nil {
		return m.NeedEos
	}
	return false
}

// Message sent for a telemetry subscription request
type SubscriptionRequest struct {
	// Data associated with a telemetry subscription
	Input *SubscriptionInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// List of data models paths and filters
	// which are used in a telemetry operation.
	PathList []*Path `protobuf:"bytes,2,rep,name=path_list,json=pathList,proto3" json:"path_list,omitempty"`
	// The below configuration is not defined in Openconfig RPC.
	// It is a proposed extension to configure additional
	// subscription request features.
	AdditionalConfig     *SubscriptionAdditionalConfig `protobuf:"bytes,3,opt,name=additional_config,json=additionalConfig,proto3" json:"additional_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SubscriptionRequest) Reset()         { *m = SubscriptionRequest{} }
func (m *SubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionRequest) ProtoMessage()    {}
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{4}
}

func (m *SubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionRequest.Unmarshal(m, b)
}
func (m *SubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionRequest.Merge(m, src)
}
func (m *SubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionRequest.Size(m)
}
func (m *SubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionRequest proto.InternalMessageInfo

func (m *SubscriptionRequest) GetInput() *SubscriptionInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *SubscriptionRequest) GetPathList() []*Path {
	if m != nil {
		return m.PathList
	}
	return nil
}

func (m *SubscriptionRequest) GetAdditionalConfig() *SubscriptionAdditionalConfig {
	if m != nil {
		return m.AdditionalConfig
	}
	return nil
}

// Response message to a telemetry subscription creation or get request.
type SubscriptionResponse struct {
	// Unique id for the subscription on the device. This is
	// generated by the device and returned in a subscription
	// request or when listing existing subscriptions
	SubscriptionId       uint32   `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionResponse) Reset()         { *m = SubscriptionResponse{} }
func (m *SubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResponse) ProtoMessage()    {}
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{5}
}

func (m *SubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResponse.Unmarshal(m, b)
}
func (m *SubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResponse.Merge(m, src)
}
func (m *SubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResponse.Size(m)
}
func (m *SubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResponse proto.InternalMessageInfo

func (m *SubscriptionResponse) GetSubscriptionId() uint32 {
	if m != nil {
		return m.SubscriptionId
	}
	return 0
}

type SubscriptionReply struct {
	// Response message to a telemetry subscription creation or
	// get request.
	Response *SubscriptionResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	// List of data models paths and filters
	// which are used in a telemetry operation.
	PathList             []*Path  `protobuf:"bytes,2,rep,name=path_list,json=pathList,proto3" json:"path_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionReply) Reset()         { *m = SubscriptionReply{} }
func (m *SubscriptionReply) String() string { return proto.CompactTextString(m) }
func (*SubscriptionReply) ProtoMessage()    {}
func (*SubscriptionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{6}
}

func (m *SubscriptionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionReply.Unmarshal(m, b)
}
func (m *SubscriptionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionReply.Marshal(b, m, deterministic)
}
func (m *SubscriptionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionReply.Merge(m, src)
}
func (m *SubscriptionReply) XXX_Size() int {
	return xxx_messageInfo_SubscriptionReply.Size(m)
}
func (m *SubscriptionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionReply proto.InternalMessageInfo

func (m *SubscriptionReply) GetResponse() *SubscriptionResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SubscriptionReply) GetPathList() []*Path {
	if m != nil {
		return m.PathList
	}
	return nil
}

// Simple Key-value, where value could be one of scalar types
type KeyValue struct {
	// Key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// One of possible values
	//
	// Types that are valid to be assigned to Value:
	//	*KeyValue_DoubleValue
	//	*KeyValue_IntValue
	//	*KeyValue_UintValue
	//	*KeyValue_SintValue
	//	*KeyValue_BoolValue
	//	*KeyValue_StrValue
	//	*KeyValue_BytesValue
	Value                isKeyValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{7}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type isKeyValue_Value interface {
	isKeyValue_Value()
}

type KeyValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type KeyValue_IntValue struct {
	IntValue int64 `protobuf:"varint,6,opt,name=int_value,json=intValue,proto3,oneof"`
}

type KeyValue_UintValue struct {
	UintValue uint64 `protobuf:"varint,7,opt,name=uint_value,json=uintValue,proto3,oneof"`
}

type KeyValue_SintValue struct {
	SintValue int64 `protobuf:"zigzag64,8,opt,name=sint_value,json=sintValue,proto3,oneof"`
}

type KeyValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,9,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type KeyValue_StrValue struct {
	StrValue string `protobuf:"bytes,10,opt,name=str_value,json=strValue,proto3,oneof"`
}

type KeyValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,11,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

func (*KeyValue_DoubleValue) isKeyValue_Value() {}

func (*KeyValue_IntValue) isKeyValue_Value() {}

func (*KeyValue_UintValue) isKeyValue_Value() {}

func (*KeyValue_SintValue) isKeyValue_Value() {}

func (*KeyValue_BoolValue) isKeyValue_Value() {}

func (*KeyValue_StrValue) isKeyValue_Value() {}

func (*KeyValue_BytesValue) isKeyValue_Value() {}

func (m *KeyValue) GetValue() isKeyValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KeyValue) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*KeyValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *KeyValue) GetIntValue() int64 {
	if x, ok := m.GetValue().(*KeyValue_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *KeyValue) GetUintValue() uint64 {
	if x, ok := m.GetValue().(*KeyValue_UintValue); ok {
		return x.UintValue
	}
	return 0
}

func (m *KeyValue) GetSintValue() int64 {
	if x, ok := m.GetValue().(*KeyValue_SintValue); ok {
		return x.SintValue
	}
	return 0
}

func (m *KeyValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*KeyValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *KeyValue) GetStrValue() string {
	if x, ok := m.GetValue().(*KeyValue_StrValue); ok {
		return x.StrValue
	}
	return ""
}

func (m *KeyValue) GetBytesValue() []byte {
	if x, ok := m.GetValue().(*KeyValue_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*KeyValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*KeyValue_DoubleValue)(nil),
		(*KeyValue_IntValue)(nil),
		(*KeyValue_UintValue)(nil),
		(*KeyValue_SintValue)(nil),
		(*KeyValue_BoolValue)(nil),
		(*KeyValue_StrValue)(nil),
		(*KeyValue_BytesValue)(nil),
	}
}

type OpenConfigData struct {
	// router name:export IP address
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// line card / RE (slot number)
	ComponentId uint32 `protobuf:"varint,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	// PFE (if applicable)
	SubComponentId uint32 `protobuf:"varint,3,opt,name=sub_component_id,json=subComponentId,proto3" json:"sub_component_id,omitempty"`
	// Path specification for elements of OpenConfig data models
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Sequence number, monotonically increasing for each
	// system_id, component_id, sub_component_id + path.
	SequenceNumber uint64 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// timestamp (milliseconds since epoch)
	Timestamp uint64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// List of key-value pairs
	Kv []*KeyValue `protobuf:"bytes,7,rep,name=kv,proto3" json:"kv,omitempty"`
	// For delete. If filled, it indicates delete
	Delete []*Delete `protobuf:"bytes,8,rep,name=delete,proto3" json:"delete,omitempty"`
	// If filled, it indicates end of marker for the
	// respective path in the list.
	Eom []*Eom `protobuf:"bytes,9,rep,name=eom,proto3" json:"eom,omitempty"`
	// If filled, it indicates end of sync for complete subscription
	SyncResponse         bool     `protobuf:"varint,10,opt,name=sync_response,json=syncResponse,proto3" json:"sync_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenConfigData) Reset()         { *m = OpenConfigData{} }
func (m *OpenConfigData) String() string { return proto.CompactTextString(m) }
func (*OpenConfigData) ProtoMessage()    {}
func (*OpenConfigData) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{8}
}

func (m *OpenConfigData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenConfigData.Unmarshal(m, b)
}
func (m *OpenConfigData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenConfigData.Marshal(b, m, deterministic)
}
func (m *OpenConfigData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenConfigData.Merge(m, src)
}
func (m *OpenConfigData) XXX_Size() int {
	return xxx_messageInfo_OpenConfigData.Size(m)
}
func (m *OpenConfigData) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenConfigData.DiscardUnknown(m)
}

var xxx_messageInfo_OpenConfigData proto.InternalMessageInfo

func (m *OpenConfigData) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *OpenConfigData) GetComponentId() uint32 {
	if m != nil {
		return m.ComponentId
	}
	return 0
}

func (m *OpenConfigData) GetSubComponentId() uint32 {
	if m != nil {
		return m.SubComponentId
	}
	return 0
}

func (m *OpenConfigData) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *OpenConfigData) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *OpenConfigData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *OpenConfigData) GetKv() []*KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *OpenConfigData) GetDelete() []*Delete {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *OpenConfigData) GetEom() []*Eom {
	if m != nil {
		return m.Eom
	}
	return nil
}

func (m *OpenConfigData) GetSyncResponse() bool {
	if m != nil {
		return m.SyncResponse
	}
	return false
}

// Message indicating delete for a particular path
type Delete struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delete) Reset()         { *m = Delete{} }
func (m *Delete) String() string { return proto.CompactTextString(m) }
func (*Delete) ProtoMessage()    {}
func (*Delete) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{9}
}

func (m *Delete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delete.Unmarshal(m, b)
}
func (m *Delete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delete.Marshal(b, m, deterministic)
}
func (m *Delete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delete.Merge(m, src)
}
func (m *Delete) XXX_Size() int {
	return xxx_messageInfo_Delete.Size(m)
}
func (m *Delete) XXX_DiscardUnknown() {
	xxx_messageInfo_Delete.DiscardUnknown(m)
}

var xxx_messageInfo_Delete proto.InternalMessageInfo

func (m *Delete) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// Message indicating EOM for a particular path
type Eom struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Eom) Reset()         { *m = Eom{} }
func (m *Eom) String() string { return proto.CompactTextString(m) }
func (*Eom) ProtoMessage()    {}
func (*Eom) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{10}
}

func (m *Eom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eom.Unmarshal(m, b)
}
func (m *Eom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eom.Marshal(b, m, deterministic)
}
func (m *Eom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eom.Merge(m, src)
}
func (m *Eom) XXX_Size() int {
	return xxx_messageInfo_Eom.Size(m)
}
func (m *Eom) XXX_DiscardUnknown() {
	xxx_messageInfo_Eom.DiscardUnknown(m)
}

var xxx_messageInfo_Eom proto.InternalMessageInfo

func (m *Eom) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// Message sent for a telemetry subscription cancellation request
type CancelSubscriptionRequest struct {
	// Subscription identifier as returned by the device when
	// subscription was requested
	SubscriptionId       uint32   `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelSubscriptionRequest) Reset()         { *m = CancelSubscriptionRequest{} }
func (m *CancelSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*CancelSubscriptionRequest) ProtoMessage()    {}
func (*CancelSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{11}
}

func (m *CancelSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelSubscriptionRequest.Unmarshal(m, b)
}
func (m *CancelSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *CancelSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelSubscriptionRequest.Merge(m, src)
}
func (m *CancelSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_CancelSubscriptionRequest.Size(m)
}
func (m *CancelSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelSubscriptionRequest proto.InternalMessageInfo

func (m *CancelSubscriptionRequest) GetSubscriptionId() uint32 {
	if m != nil {
		return m.SubscriptionId
	}
	return 0
}

// Reply to telemetry subscription cancellation request
type CancelSubscriptionReply struct {
	// Return code
	Code ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=telemetry.ReturnCode" json:"code,omitempty"`
	// Return code string
	CodeStr              string   `protobuf:"bytes,2,opt,name=code_str,json=codeStr,proto3" json:"code_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelSubscriptionReply) Reset()         { *m = CancelSubscriptionReply{} }
func (m *CancelSubscriptionReply) String() string { return proto.CompactTextString(m) }
func (*CancelSubscriptionReply) ProtoMessage()    {}
func (*CancelSubscriptionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{12}
}

func (m *CancelSubscriptionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelSubscriptionReply.Unmarshal(m, b)
}
func (m *CancelSubscriptionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelSubscriptionReply.Marshal(b, m, deterministic)
}
func (m *CancelSubscriptionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelSubscriptionReply.Merge(m, src)
}
func (m *CancelSubscriptionReply) XXX_Size() int {
	return xxx_messageInfo_CancelSubscriptionReply.Size(m)
}
func (m *CancelSubscriptionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelSubscriptionReply.DiscardUnknown(m)
}

var xxx_messageInfo_CancelSubscriptionReply proto.InternalMessageInfo

func (m *CancelSubscriptionReply) GetCode() ReturnCode {
	if m != nil {
		return m.Code
	}
	return ReturnCode_SUCCESS
}

func (m *CancelSubscriptionReply) GetCodeStr() string {
	if m != nil {
		return m.CodeStr
	}
	return ""
}

// Message sent for a telemetry get request
type GetSubscriptionsRequest struct {
	// Subscription identifier as returned by the device when
	// subscription was requested
	// --- or ---
	// 0xFFFFFFFF for all subscription identifiers
	SubscriptionId       uint32   `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscriptionsRequest) Reset()         { *m = GetSubscriptionsRequest{} }
func (m *GetSubscriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionsRequest) ProtoMessage()    {}
func (*GetSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{13}
}

func (m *GetSubscriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionsRequest.Unmarshal(m, b)
}
func (m *GetSubscriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionsRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionsRequest.Merge(m, src)
}
func (m *GetSubscriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionsRequest.Size(m)
}
func (m *GetSubscriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionsRequest proto.InternalMessageInfo

func (m *GetSubscriptionsRequest) GetSubscriptionId() uint32 {
	if m != nil {
		return m.SubscriptionId
	}
	return 0
}

// Reply to telemetry subscription get request
type GetSubscriptionsReply struct {
	// List of current telemetry subscriptions
	SubscriptionList     []*SubscriptionReply `protobuf:"bytes,1,rep,name=subscription_list,json=subscriptionList,proto3" json:"subscription_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetSubscriptionsReply) Reset()         { *m = GetSubscriptionsReply{} }
func (m *GetSubscriptionsReply) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionsReply) ProtoMessage()    {}
func (*GetSubscriptionsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{14}
}

func (m *GetSubscriptionsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionsReply.Unmarshal(m, b)
}
func (m *GetSubscriptionsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionsReply.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionsReply.Merge(m, src)
}
func (m *GetSubscriptionsReply) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionsReply.Size(m)
}
func (m *GetSubscriptionsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionsReply proto.InternalMessageInfo

func (m *GetSubscriptionsReply) GetSubscriptionList() []*SubscriptionReply {
	if m != nil {
		return m.SubscriptionList
	}
	return nil
}

// Message sent for telemetry agent operational states request
type GetOperationalStateRequest struct {
	// Per-subscription_id level operational state can be requested.
	//
	// Subscription identifier as returned by the device when
	// subscription was requested
	// --- or ---
	// 0xFFFFFFFF for all subscription identifiers including agent-level
	// operational stats
	// --- or ---
	// If subscription_id is not present then sent only agent-level
	// operational stats
	SubscriptionId uint32 `protobuf:"varint,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Control verbosity of the output
	Verbosity            VerbosityLevel `protobuf:"varint,2,opt,name=verbosity,proto3,enum=telemetry.VerbosityLevel" json:"verbosity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetOperationalStateRequest) Reset()         { *m = GetOperationalStateRequest{} }
func (m *GetOperationalStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetOperationalStateRequest) ProtoMessage()    {}
func (*GetOperationalStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{15}
}

func (m *GetOperationalStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperationalStateRequest.Unmarshal(m, b)
}
func (m *GetOperationalStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperationalStateRequest.Marshal(b, m, deterministic)
}
func (m *GetOperationalStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperationalStateRequest.Merge(m, src)
}
func (m *GetOperationalStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetOperationalStateRequest.Size(m)
}
func (m *GetOperationalStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperationalStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperationalStateRequest proto.InternalMessageInfo

func (m *GetOperationalStateRequest) GetSubscriptionId() uint32 {
	if m != nil {
		return m.SubscriptionId
	}
	return 0
}

func (m *GetOperationalStateRequest) GetVerbosity() VerbosityLevel {
	if m != nil {
		return m.Verbosity
	}
	return VerbosityLevel_DETAIL
}

// Reply to telemetry agent operational states request
type GetOperationalStateReply struct {
	// List of key-value pairs where
	//     key      = operational state definition
	//     value    = operational state value
	Kv                   []*KeyValue `protobuf:"bytes,1,rep,name=kv,proto3" json:"kv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetOperationalStateReply) Reset()         { *m = GetOperationalStateReply{} }
func (m *GetOperationalStateReply) String() string { return proto.CompactTextString(m) }
func (*GetOperationalStateReply) ProtoMessage()    {}
func (*GetOperationalStateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{16}
}

func (m *GetOperationalStateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperationalStateReply.Unmarshal(m, b)
}
func (m *GetOperationalStateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperationalStateReply.Marshal(b, m, deterministic)
}
func (m *GetOperationalStateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperationalStateReply.Merge(m, src)
}
func (m *GetOperationalStateReply) XXX_Size() int {
	return xxx_messageInfo_GetOperationalStateReply.Size(m)
}
func (m *GetOperationalStateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperationalStateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperationalStateReply proto.InternalMessageInfo

func (m *GetOperationalStateReply) GetKv() []*KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

// Message sent for a data encoding request
type DataEncodingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataEncodingRequest) Reset()         { *m = DataEncodingRequest{} }
func (m *DataEncodingRequest) String() string { return proto.CompactTextString(m) }
func (*DataEncodingRequest) ProtoMessage()    {}
func (*DataEncodingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{17}
}

func (m *DataEncodingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataEncodingRequest.Unmarshal(m, b)
}
func (m *DataEncodingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataEncodingRequest.Marshal(b, m, deterministic)
}
func (m *DataEncodingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataEncodingRequest.Merge(m, src)
}
func (m *DataEncodingRequest) XXX_Size() int {
	return xxx_messageInfo_DataEncodingRequest.Size(m)
}
func (m *DataEncodingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataEncodingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataEncodingRequest proto.InternalMessageInfo

// Reply to data encodings supported request
type DataEncodingReply struct {
	EncodingList         []EncodingType `protobuf:"varint,1,rep,packed,name=encoding_list,json=encodingList,proto3,enum=telemetry.EncodingType" json:"encoding_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DataEncodingReply) Reset()         { *m = DataEncodingReply{} }
func (m *DataEncodingReply) String() string { return proto.CompactTextString(m) }
func (*DataEncodingReply) ProtoMessage()    {}
func (*DataEncodingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{18}
}

func (m *DataEncodingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataEncodingReply.Unmarshal(m, b)
}
func (m *DataEncodingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataEncodingReply.Marshal(b, m, deterministic)
}
func (m *DataEncodingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataEncodingReply.Merge(m, src)
}
func (m *DataEncodingReply) XXX_Size() int {
	return xxx_messageInfo_DataEncodingReply.Size(m)
}
func (m *DataEncodingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DataEncodingReply.DiscardUnknown(m)
}

var xxx_messageInfo_DataEncodingReply proto.InternalMessageInfo

func (m *DataEncodingReply) GetEncodingList() []EncodingType {
	if m != nil {
		return m.EncodingList
	}
	return nil
}

func init() {
	proto.RegisterEnum("telemetry.ReturnCode", ReturnCode_name, ReturnCode_value)
	proto.RegisterEnum("telemetry.VerbosityLevel", VerbosityLevel_name, VerbosityLevel_value)
	proto.RegisterEnum("telemetry.EncodingType", EncodingType_name, EncodingType_value)
	proto.RegisterType((*Collector)(nil), "telemetry.Collector")
	proto.RegisterType((*SubscriptionInput)(nil), "telemetry.SubscriptionInput")
	proto.RegisterType((*Path)(nil), "telemetry.Path")
	proto.RegisterType((*SubscriptionAdditionalConfig)(nil), "telemetry.SubscriptionAdditionalConfig")
	proto.RegisterType((*SubscriptionRequest)(nil), "telemetry.SubscriptionRequest")
	proto.RegisterType((*SubscriptionResponse)(nil), "telemetry.SubscriptionResponse")
	proto.RegisterType((*SubscriptionReply)(nil), "telemetry.SubscriptionReply")
	proto.RegisterType((*KeyValue)(nil), "telemetry.KeyValue")
	proto.RegisterType((*OpenConfigData)(nil), "telemetry.OpenConfigData")
	proto.RegisterType((*Delete)(nil), "telemetry.Delete")
	proto.RegisterType((*Eom)(nil), "telemetry.Eom")
	proto.RegisterType((*CancelSubscriptionRequest)(nil), "telemetry.CancelSubscriptionRequest")
	proto.RegisterType((*CancelSubscriptionReply)(nil), "telemetry.CancelSubscriptionReply")
	proto.RegisterType((*GetSubscriptionsRequest)(nil), "telemetry.GetSubscriptionsRequest")
	proto.RegisterType((*GetSubscriptionsReply)(nil), "telemetry.GetSubscriptionsReply")
	proto.RegisterType((*GetOperationalStateRequest)(nil), "telemetry.GetOperationalStateRequest")
	proto.RegisterType((*GetOperationalStateReply)(nil), "telemetry.GetOperationalStateReply")
	proto.RegisterType((*DataEncodingRequest)(nil), "telemetry.DataEncodingRequest")
	proto.RegisterType((*DataEncodingReply)(nil), "telemetry.DataEncodingReply")
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77) }

var fileDescriptor_56ede974c0020f77 = []byte{
	// 1266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x5d, 0x73, 0xda, 0x46,
	0x17, 0x46, 0x80, 0x0d, 0x3a, 0x7c, 0x44, 0xac, 0xe3, 0x37, 0xd8, 0xe1, 0x6d, 0x88, 0xdc, 0x4e,
	0x48, 0x26, 0xf5, 0x74, 0xc8, 0x45, 0xa7, 0x93, 0xce, 0x64, 0x62, 0x2c, 0xc7, 0x34, 0x2e, 0xb8,
	0x2b, 0x9c, 0xb6, 0x57, 0x1a, 0x21, 0x6d, 0x1c, 0x4d, 0xf4, 0x55, 0xed, 0xc2, 0x84, 0x9b, 0xfc,
	0x82, 0x4e, 0xff, 0x59, 0xaf, 0xfb, 0x27, 0xfa, 0x13, 0x7a, 0xd1, 0xd9, 0x95, 0x04, 0x8b, 0x03,
	0x49, 0x73, 0x65, 0xe9, 0x39, 0x8f, 0xce, 0xe7, 0x73, 0x8e, 0x81, 0x9a, 0x7d, 0x4d, 0x42, 0x76,
	0x1c, 0x27, 0x11, 0x8b, 0x90, 0xca, 0x88, 0x4f, 0x02, 0xc2, 0x92, 0x85, 0xfe, 0x1d, 0xa8, 0x83,
	0xc8, 0xf7, 0x89, 0xc3, 0xa2, 0x04, 0xb5, 0xa1, 0x62, 0xbb, 0x6e, 0x42, 0x28, 0x6d, 0x2b, 0x5d,
	0xa5, 0xa7, 0xe2, 0xfc, 0x15, 0x21, 0x28, 0xc7, 0x51, 0xc2, 0xda, 0xc5, 0xae, 0xd2, 0x6b, 0x60,
	0xf1, 0xac, 0x5f, 0x42, 0xcb, 0x9c, 0x4d, 0xa9, 0x93, 0x78, 0x31, 0xf3, 0xa2, 0x70, 0x18, 0xc6,
	0x33, 0x86, 0x9e, 0x42, 0xd3, 0xc9, 0xfd, 0x59, 0xbe, 0x47, 0x59, 0x5b, 0xe9, 0x96, 0x7a, 0xb5,
	0xfe, 0xed, 0xe3, 0x65, 0xcc, 0xe3, 0x65, 0x40, 0xdc, 0x58, 0x72, 0x2f, 0x3c, 0xca, 0xf4, 0xbf,
	0x14, 0x28, 0x5f, 0xda, 0xec, 0x8d, 0x08, 0x67, 0xb3, 0x37, 0x59, 0x16, 0xe2, 0x19, 0xfd, 0x0f,
	0x76, 0x5f, 0x7b, 0x3e, 0x23, 0x89, 0x48, 0x42, 0xc5, 0xd9, 0x1b, 0xfa, 0x1a, 0x10, 0x9d, 0xc5,
	0x31, 0x4f, 0xd3, 0x9a, 0x85, 0xce, 0x1b, 0x3b, 0xbc, 0x26, 0x6e, 0xbb, 0xd4, 0x55, 0x7a, 0x55,
	0xdc, 0xca, 0x2d, 0x57, 0xb9, 0x01, 0x1d, 0xc3, 0x5e, 0x60, 0xbf, 0xb3, 0xa8, 0xe7, 0x93, 0x90,
	0x59, 0x5e, 0xc8, 0x48, 0x32, 0xb7, 0xfd, 0x76, 0x59, 0x14, 0xd6, 0x0a, 0xec, 0x77, 0xa6, 0xb0,
	0x0c, 0x33, 0x03, 0x7a, 0x08, 0x1a, 0xb5, 0x83, 0xd8, 0x27, 0xd6, 0xeb, 0x84, 0xfc, 0x36, 0x23,
	0xa1, 0xb3, 0x68, 0xef, 0x08, 0xf2, 0xad, 0x14, 0x3f, 0xcb, 0x61, 0x74, 0x00, 0xd5, 0x90, 0x10,
	0xd7, 0x22, 0x51, 0xd0, 0xde, 0x15, 0xf1, 0x2b, 0xfc, 0xdd, 0x88, 0x02, 0xfd, 0x77, 0x05, 0x3a,
	0x72, 0xb3, 0x9e, 0xbb, 0xae, 0xc7, 0xff, 0xda, 0xfe, 0x20, 0x0a, 0x5f, 0x7b, 0xd7, 0xe8, 0x08,
	0x1a, 0xbe, 0x17, 0x78, 0xcc, 0x4a, 0x88, 0x13, 0x25, 0x6e, 0x3a, 0x80, 0x1d, 0x5c, 0x17, 0x20,
	0x4e, 0x31, 0xf4, 0x18, 0x50, 0x4a, 0x62, 0x5e, 0x40, 0x2c, 0x4a, 0x9c, 0x28, 0x74, 0xa9, 0x68,
	0xc7, 0x0e, 0xd6, 0x84, 0x65, 0xe2, 0x05, 0xc4, 0x4c, 0x71, 0x29, 0x1d, 0x9a, 0xb5, 0x23, 0x4b,
	0x87, 0xea, 0x7f, 0x2a, 0xb0, 0x27, 0xa7, 0x83, 0x79, 0x09, 0x94, 0xa1, 0x3e, 0xec, 0x78, 0x7c,
	0x8c, 0x22, 0x7a, 0xad, 0xdf, 0x91, 0x86, 0xf6, 0xc1, 0xa8, 0x71, 0x4a, 0x45, 0x8f, 0x41, 0xe5,
	0xf3, 0x49, 0x87, 0x5d, 0x14, 0xc3, 0xbe, 0x25, 0x7d, 0xc7, 0xe7, 0x89, 0xab, 0x9c, 0xc1, 0x47,
	0x8c, 0x26, 0xd0, 0xb2, 0x97, 0xb5, 0x5b, 0x8e, 0x28, 0x5e, 0x64, 0x57, 0xeb, 0x3f, 0xd8, 0x12,
	0xed, 0x66, 0xaf, 0xb0, 0x66, 0xdf, 0x40, 0xf4, 0x67, 0x70, 0x7b, 0xbd, 0x1c, 0x1a, 0x47, 0x21,
	0x25, 0xe8, 0x01, 0xdc, 0xa2, 0x12, 0x6e, 0x79, 0xae, 0xa8, 0xac, 0x81, 0x9b, 0x32, 0x3c, 0x74,
	0xf5, 0xf7, 0xeb, 0x5a, 0xc6, 0x24, 0xf6, 0x17, 0xe8, 0x29, 0x54, 0x93, 0xcc, 0x53, 0xd6, 0x90,
	0x7b, 0x5b, 0x52, 0xcc, 0x03, 0xe2, 0xe5, 0x07, 0x9f, 0xd7, 0x16, 0xfd, 0x8f, 0x22, 0x54, 0x5f,
	0x92, 0xc5, 0x2b, 0xdb, 0x9f, 0x11, 0xa4, 0x41, 0xe9, 0x2d, 0x59, 0x64, 0xe2, 0xe7, 0x8f, 0xe8,
	0x08, 0xea, 0x6e, 0x34, 0x9b, 0xfa, 0xc4, 0x9a, 0x73, 0x86, 0x10, 0xa0, 0x72, 0x5e, 0xc0, 0xb5,
	0x14, 0x4d, 0x3f, 0xfb, 0x3f, 0xa8, 0x5e, 0xc8, 0x32, 0x06, 0xd7, 0x5f, 0xe9, 0xbc, 0x80, 0xab,
	0x5e, 0xc8, 0x52, 0xf3, 0x3d, 0x80, 0xd9, 0xca, 0x5e, 0xe9, 0x2a, 0xbd, 0xf2, 0x79, 0x01, 0xab,
	0x33, 0x99, 0x40, 0x57, 0x84, 0x6a, 0x57, 0xe9, 0x21, 0x4e, 0xa0, 0x32, 0x61, 0x1a, 0x45, 0x7e,
	0x46, 0x50, 0xb9, 0xa4, 0x38, 0x81, 0x63, 0xcb, 0x0c, 0x28, 0x4b, 0x32, 0x3b, 0xf0, 0xf4, 0x79,
	0x06, 0x94, 0x25, 0xa9, 0xf9, 0x3e, 0xd4, 0xa6, 0x0b, 0x46, 0x68, 0x46, 0xa8, 0x75, 0x95, 0x5e,
	0xfd, 0xbc, 0x80, 0x41, 0x80, 0x82, 0x72, 0x52, 0x81, 0x1d, 0x61, 0xd4, 0xff, 0x2e, 0x42, 0x73,
	0x1c, 0x93, 0x30, 0x1d, 0xf0, 0xa9, 0xcd, 0x6c, 0x74, 0x17, 0x54, 0xba, 0xa0, 0x8c, 0x04, 0xf9,
	0x18, 0x55, 0x5c, 0x4d, 0x81, 0xa1, 0x8b, 0xee, 0x43, 0xdd, 0x89, 0x82, 0x38, 0x0a, 0xc5, 0x56,
	0xbb, 0xd9, 0xa1, 0xaa, 0x2d, 0xb1, 0xa1, 0x8b, 0x7a, 0xa0, 0xd1, 0xd9, 0xd4, 0x5a, 0xa3, 0x95,
	0x96, 0x6a, 0x18, 0x48, 0xcc, 0xfc, 0xfc, 0x94, 0xa5, 0xf3, 0xc3, 0xa5, 0x94, 0x2e, 0x3a, 0xb1,
	0xc2, 0x59, 0x30, 0x25, 0x89, 0x98, 0x42, 0x19, 0x37, 0x73, 0x78, 0x24, 0x50, 0xd4, 0x01, 0x95,
	0xaf, 0x27, 0x65, 0x76, 0x10, 0x8b, 0x31, 0x94, 0xf1, 0x0a, 0x40, 0x47, 0x50, 0x7c, 0x3b, 0x6f,
	0x57, 0x84, 0x1e, 0xf6, 0x24, 0x3d, 0xe4, 0xc3, 0xc7, 0xc5, 0xb7, 0x73, 0xf4, 0x10, 0x76, 0x5d,
	0xe2, 0x13, 0xc6, 0xa7, 0xc0, 0x89, 0x2d, 0x89, 0x78, 0x2a, 0x0c, 0x38, 0x23, 0xa0, 0x2e, 0x94,
	0xf8, 0xb9, 0x51, 0x05, 0xaf, 0x29, 0xf1, 0x8c, 0x28, 0xc0, 0xdc, 0xc4, 0x2f, 0x0b, 0x5d, 0x84,
	0x8e, 0xb5, 0x94, 0x32, 0x88, 0x5b, 0x50, 0xe7, 0x60, 0xae, 0x5b, 0xbd, 0x03, 0xbb, 0xa9, 0xe3,
	0x4d, 0xa7, 0x57, 0x3f, 0x80, 0x92, 0x11, 0x05, 0x1b, 0x4d, 0xa7, 0x70, 0x30, 0xb0, 0x43, 0x87,
	0xf8, 0x9b, 0xce, 0xc9, 0x7f, 0x5e, 0x3f, 0x0b, 0xee, 0x6c, 0xf2, 0xc2, 0x97, 0xf0, 0x21, 0x94,
	0x9d, 0xc8, 0x4d, 0x17, 0xb0, 0xd9, 0xdf, 0x97, 0x2a, 0xc4, 0x84, 0xcd, 0x92, 0x70, 0x10, 0xb9,
	0x04, 0x0b, 0x0a, 0x3f, 0x78, 0xfc, 0xaf, 0x45, 0x59, 0xfe, 0x3f, 0xa2, 0xc2, 0xdf, 0x4d, 0x96,
	0xe8, 0x27, 0x70, 0xe7, 0x05, 0x61, 0xb2, 0x77, 0xfa, 0xd9, 0x49, 0x4e, 0x61, 0xff, 0x43, 0x1f,
	0x3c, 0xc5, 0x21, 0xb4, 0xd6, 0x3c, 0x48, 0xff, 0xf6, 0x3a, 0x5b, 0x0f, 0x46, 0xec, 0x2f, 0xb0,
	0x26, 0x7f, 0x26, 0xee, 0xc0, 0x7b, 0x38, 0x7c, 0x41, 0xd8, 0x38, 0x26, 0x89, 0x9d, 0x1e, 0x38,
	0x93, 0xd9, 0x8c, 0x7c, 0x6e, 0xaa, 0xe8, 0x5b, 0x50, 0xe7, 0x24, 0x99, 0x46, 0xd4, 0x63, 0x0b,
	0xd1, 0x8a, 0x66, 0xff, 0x40, 0xca, 0xe4, 0x55, 0x6e, 0xbb, 0x20, 0x73, 0xe2, 0xe3, 0x15, 0x57,
	0x7f, 0x06, 0xed, 0x8d, 0xf1, 0x79, 0x99, 0xa9, 0x74, 0x95, 0x8f, 0x4a, 0x57, 0xdf, 0x87, 0x3d,
	0xbe, 0xac, 0x46, 0xe8, 0x44, 0xae, 0x17, 0x5e, 0x67, 0x99, 0xeb, 0x3f, 0x41, 0x6b, 0x1d, 0xe6,
	0x0e, 0xbf, 0x87, 0x06, 0xc9, 0x80, 0x55, 0xcf, 0x9a, 0xfd, 0x3b, 0xb2, 0x8a, 0x33, 0xfb, 0x64,
	0x11, 0x13, 0x5c, 0xcf, 0xd9, 0xbc, 0x55, 0x8f, 0x5e, 0x00, 0xac, 0x14, 0x80, 0x6a, 0x50, 0x31,
	0xaf, 0x06, 0x03, 0xc3, 0x34, 0xb5, 0x02, 0x3a, 0x80, 0xfd, 0xd1, 0xd8, 0x32, 0xaf, 0x4e, 0xcc,
	0x01, 0x1e, 0x5e, 0x4e, 0x86, 0xe3, 0x91, 0x65, 0x8c, 0x26, 0xf8, 0x57, 0x4d, 0x41, 0x2d, 0x68,
	0x5c, 0x8d, 0x5e, 0x8e, 0xc6, 0x3f, 0x8f, 0x2c, 0x03, 0xe3, 0x31, 0xd6, 0x8a, 0x8f, 0xfa, 0xd0,
	0x5c, 0x6f, 0x08, 0x02, 0xd8, 0x3d, 0x35, 0x26, 0xcf, 0x87, 0x17, 0x5a, 0x01, 0xa9, 0xb0, 0x33,
	0x31, 0xb0, 0x69, 0x68, 0x0a, 0x7f, 0x3c, 0xc1, 0x43, 0xe3, 0x4c, 0x2b, 0x3e, 0x7a, 0x0e, 0x75,
	0x39, 0x35, 0xd4, 0x00, 0xf5, 0x6a, 0x74, 0x6a, 0x9c, 0x0d, 0x47, 0xc6, 0xa9, 0x56, 0x40, 0x15,
	0x28, 0xfd, 0xf2, 0xe3, 0x85, 0xa6, 0x70, 0xfc, 0x07, 0x73, 0x3c, 0xb2, 0x86, 0xc6, 0xe4, 0x4c,
	0x2b, 0x72, 0xc7, 0x97, 0x78, 0x3c, 0x19, 0x3f, 0xd1, 0x4a, 0xfd, 0x7f, 0x4a, 0xb0, 0xb7, 0xba,
	0x70, 0x93, 0xbc, 0x64, 0x64, 0x02, 0x5a, 0xd6, 0x9f, 0x49, 0x66, 0x4a, 0xd0, 0x17, 0x5b, 0x85,
	0x24, 0x1a, 0x7c, 0x28, 0x8f, 0x77, 0xfd, 0x6e, 0xea, 0x85, 0x6f, 0x14, 0xe4, 0xc1, 0x5d, 0x47,
	0x2c, 0xd8, 0xe4, 0x86, 0x6b, 0xe1, 0x04, 0x7d, 0x29, 0xff, 0x3a, 0xdb, 0xb6, 0xce, 0x87, 0xfa,
	0x27, 0x58, 0xb1, 0xbf, 0xd0, 0x0b, 0xc8, 0x81, 0x83, 0x6b, 0xc2, 0x36, 0xc6, 0xa1, 0x48, 0x76,
	0xb1, 0x65, 0x21, 0x0f, 0xbb, 0x1f, 0xe5, 0xa4, 0x41, 0x7c, 0xe8, 0xc8, 0x41, 0x6e, 0x0a, 0x16,
	0x7d, 0xb5, 0xee, 0x63, 0xcb, 0x42, 0x1d, 0x1e, 0x7d, 0x8a, 0x96, 0x46, 0xc3, 0xa0, 0x5d, 0x13,
	0x26, 0x0b, 0x98, 0xae, 0x0d, 0x64, 0x83, 0xe2, 0x0f, 0x3b, 0x5b, 0xed, 0xc2, 0xe7, 0x74, 0x57,
	0xfc, 0x14, 0x7f, 0xf2, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x76, 0x6c, 0xd9, 0x99, 0x0b,
	0x00, 0x00,
}
