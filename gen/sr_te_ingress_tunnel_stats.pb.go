// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sr_te_ingress_tunnel_stats.proto

package gen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Top-level message
//
type SrTeIngressTunnelStats struct {
	// List of SR TE stats per BSID, IP and Color records
	TeIngressTunnelStats []*SegmentRoutingTeIngressTunnelRecord `protobuf:"bytes,1,rep,name=te_ingress_tunnel_stats,json=teIngressTunnelStats" json:"te_ingress_tunnel_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SrTeIngressTunnelStats) Reset()         { *m = SrTeIngressTunnelStats{} }
func (m *SrTeIngressTunnelStats) String() string { return proto.CompactTextString(m) }
func (*SrTeIngressTunnelStats) ProtoMessage()    {}
func (*SrTeIngressTunnelStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_ingress_tunnel_stats_fba4e2f54a56c4ab, []int{0}
}
func (m *SrTeIngressTunnelStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrTeIngressTunnelStats.Unmarshal(m, b)
}
func (m *SrTeIngressTunnelStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrTeIngressTunnelStats.Marshal(b, m, deterministic)
}
func (dst *SrTeIngressTunnelStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrTeIngressTunnelStats.Merge(dst, src)
}
func (m *SrTeIngressTunnelStats) XXX_Size() int {
	return xxx_messageInfo_SrTeIngressTunnelStats.Size(m)
}
func (m *SrTeIngressTunnelStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SrTeIngressTunnelStats.DiscardUnknown(m)
}

var xxx_messageInfo_SrTeIngressTunnelStats proto.InternalMessageInfo

func (m *SrTeIngressTunnelStats) GetTeIngressTunnelStats() []*SegmentRoutingTeIngressTunnelRecord {
	if m != nil {
		return m.TeIngressTunnelStats
	}
	return nil
}

//
// SR TE Ingress Tunnel statistics record
//
type SegmentRoutingTeIngressTunnelRecord struct {
	// Name of the tunnel
	TunnelName *string `protobuf:"bytes,1,req,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	// Instance Identifier for cases when RPD creates multiple instances
	InstanceIdentifier *uint32 `protobuf:"varint,2,opt,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	// Name of the counter. This is useful when an SR label has multiple counters.
	// For some scenarios like routing restart, it is possible that a new counter is
	// created in the hardware.
	CounterName *string `protobuf:"bytes,3,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// Statistics
	Stats                *SegmentRoutingTeIngressTunnelStats `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *SegmentRoutingTeIngressTunnelRecord) Reset()         { *m = SegmentRoutingTeIngressTunnelRecord{} }
func (m *SegmentRoutingTeIngressTunnelRecord) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingTeIngressTunnelRecord) ProtoMessage()    {}
func (*SegmentRoutingTeIngressTunnelRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_ingress_tunnel_stats_fba4e2f54a56c4ab, []int{1}
}
func (m *SegmentRoutingTeIngressTunnelRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord.Unmarshal(m, b)
}
func (m *SegmentRoutingTeIngressTunnelRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingTeIngressTunnelRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord.Merge(dst, src)
}
func (m *SegmentRoutingTeIngressTunnelRecord) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord.Size(m)
}
func (m *SegmentRoutingTeIngressTunnelRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingTeIngressTunnelRecord proto.InternalMessageInfo

func (m *SegmentRoutingTeIngressTunnelRecord) GetTunnelName() string {
	if m != nil && m.TunnelName != nil {
		return *m.TunnelName
	}
	return ""
}

func (m *SegmentRoutingTeIngressTunnelRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *SegmentRoutingTeIngressTunnelRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *SegmentRoutingTeIngressTunnelRecord) GetStats() *SegmentRoutingTeIngressTunnelStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type SegmentRoutingTeIngressTunnelStats struct {
	// Packet and Byte statistics
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rates of the above counters
	PacketRate           *uint64  `protobuf:"varint,3,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	ByteRate             *uint64  `protobuf:"varint,4,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentRoutingTeIngressTunnelStats) Reset()         { *m = SegmentRoutingTeIngressTunnelStats{} }
func (m *SegmentRoutingTeIngressTunnelStats) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingTeIngressTunnelStats) ProtoMessage()    {}
func (*SegmentRoutingTeIngressTunnelStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_ingress_tunnel_stats_fba4e2f54a56c4ab, []int{2}
}
func (m *SegmentRoutingTeIngressTunnelStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelStats.Unmarshal(m, b)
}
func (m *SegmentRoutingTeIngressTunnelStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelStats.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingTeIngressTunnelStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingTeIngressTunnelStats.Merge(dst, src)
}
func (m *SegmentRoutingTeIngressTunnelStats) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingTeIngressTunnelStats.Size(m)
}
func (m *SegmentRoutingTeIngressTunnelStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingTeIngressTunnelStats.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingTeIngressTunnelStats proto.InternalMessageInfo

func (m *SegmentRoutingTeIngressTunnelStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *SegmentRoutingTeIngressTunnelStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *SegmentRoutingTeIngressTunnelStats) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *SegmentRoutingTeIngressTunnelStats) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprSrTeIngressTunnelStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*SrTeIngressTunnelStats)(nil),
	Field:         45,
	Name:          "jnpr_sr_te_ingress_tunnel_stats_ext",
	Tag:           "bytes,45,opt,name=jnpr_sr_te_ingress_tunnel_stats_ext,json=jnprSrTeIngressTunnelStatsExt",
	Filename:      "sr_te_ingress_tunnel_stats.proto",
}

func init() {
	proto.RegisterType((*SrTeIngressTunnelStats)(nil), "SrTeIngressTunnelStats")
	proto.RegisterType((*SegmentRoutingTeIngressTunnelRecord)(nil), "SegmentRoutingTeIngressTunnelRecord")
	proto.RegisterType((*SegmentRoutingTeIngressTunnelStats)(nil), "SegmentRoutingTeIngressTunnelStats")
	proto.RegisterExtension(E_JnprSrTeIngressTunnelStatsExt)
}

func init() {
	proto.RegisterFile("sr_te_ingress_tunnel_stats.proto", fileDescriptor_sr_te_ingress_tunnel_stats_fba4e2f54a56c4ab)
}

var fileDescriptor_sr_te_ingress_tunnel_stats_fba4e2f54a56c4ab = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x6b, 0xdb, 0x40,
	0x10, 0xc5, 0x59, 0xff, 0xa1, 0xf6, 0xa8, 0xbd, 0xac, 0x4b, 0x2d, 0x5a, 0x4a, 0x85, 0x5c, 0x8a,
	0x2e, 0xd5, 0xc1, 0x87, 0x42, 0x73, 0x0a, 0x81, 0x1c, 0x9c, 0x83, 0x0f, 0x2b, 0xdf, 0x72, 0x58,
	0x14, 0x79, 0x62, 0x14, 0x5b, 0xbb, 0x62, 0x77, 0x44, 0x6c, 0xc8, 0x29, 0x1f, 0x28, 0x1f, 0x2c,
	0x9f, 0x22, 0x48, 0x6b, 0x3b, 0x21, 0xd8, 0x49, 0xae, 0xf3, 0x7e, 0x6f, 0xde, 0xbe, 0x61, 0x21,
	0xb0, 0x46, 0x12, 0xca, 0x5c, 0x2d, 0x0c, 0x5a, 0x2b, 0xa9, 0x52, 0x0a, 0x57, 0xd2, 0x52, 0x4a,
	0x36, 0x2e, 0x8d, 0x26, 0xfd, 0x7d, 0x40, 0xb8, 0xc2, 0x02, 0xc9, 0x6c, 0x24, 0xe9, 0xd2, 0x0d,
	0xc3, 0x0a, 0xbe, 0x25, 0x66, 0x86, 0x13, 0x67, 0x9b, 0x35, 0xae, 0xa4, 0x36, 0xf1, 0x4b, 0x18,
	0x1e, 0xd9, 0xe7, 0xb3, 0xa0, 0x1d, 0x79, 0xe3, 0xdf, 0x71, 0x82, 0x8b, 0x02, 0x15, 0x09, 0x5d,
	0x51, 0xae, 0x16, 0xaf, 0xb6, 0x08, 0xcc, 0xb4, 0x99, 0x8b, 0xaf, 0x74, 0x60, 0x79, 0xf8, 0xc8,
	0x60, 0xf4, 0x01, 0x37, 0xff, 0x03, 0xde, 0x36, 0x59, 0xa5, 0x05, 0xfa, 0x2c, 0x68, 0x45, 0xfd,
	0xb3, 0xee, 0xfd, 0x69, 0xab, 0xc7, 0x04, 0x38, 0x65, 0x9a, 0x16, 0xc8, 0xff, 0xc1, 0x20, 0x57,
	0x96, 0x52, 0x95, 0xa1, 0xcc, 0xe7, 0xa8, 0x28, 0xbf, 0xce, 0xd1, 0xf8, 0xad, 0x80, 0x45, 0x5f,
	0x76, 0x3c, 0xdf, 0x11, 0x93, 0x3d, 0xc0, 0x23, 0xf8, 0x9c, 0xe9, 0x4a, 0x11, 0x1a, 0x17, 0xd0,
	0x0e, 0xd8, 0x73, 0x80, 0xb7, 0x95, 0x9a, 0x84, 0xff, 0xd0, 0x75, 0xe5, 0x3b, 0x01, 0x8b, 0xbc,
	0xf1, 0xe8, 0xed, 0xf2, 0x4d, 0x4b, 0xe1, 0x1c, 0xe1, 0x03, 0x83, 0xf0, 0x7d, 0x9a, 0xff, 0x82,
	0x4f, 0x65, 0x9a, 0x2d, 0xb1, 0x39, 0x30, 0x8b, 0x3a, 0xcd, 0x33, 0x7c, 0x26, 0x76, 0x53, 0xfe,
	0x03, 0xba, 0x57, 0x1b, 0x42, 0xdb, 0xd4, 0xda, 0xcb, 0x6e, 0x56, 0x5f, 0xca, 0x71, 0xd2, 0xa4,
	0xe4, 0x8a, 0x38, 0x24, 0x60, 0x02, 0x9c, 0x22, 0x52, 0x42, 0x1e, 0x42, 0xbf, 0x36, 0x38, 0xaa,
	0xf3, 0x92, 0xea, 0xd5, 0xf3, 0x9a, 0x39, 0xb9, 0x83, 0xd1, 0x8d, 0x2a, 0x8d, 0x3c, 0xfe, 0xa5,
	0x24, 0xae, 0x89, 0x0f, 0xe3, 0x8b, 0x4a, 0xe5, 0x25, 0x9a, 0x29, 0xd2, 0xad, 0x36, 0x4b, 0x9b,
	0xa0, 0xb2, 0xda, 0x58, 0xff, 0x6f, 0x73, 0xa2, 0x61, 0x7c, 0xf8, 0x67, 0x89, 0x9f, 0xf5, 0xf2,
	0xc3, 0xda, 0xf9, 0x9a, 0x9e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x60, 0xe8, 0x8b, 0x3d, 0xca, 0x02,
	0x00, 0x00,
}
