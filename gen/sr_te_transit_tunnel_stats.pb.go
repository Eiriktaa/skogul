// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sr_te_transit_tunnel_stats.proto

package gen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Top-level message
//
type SrTeTransitTunnelStats struct {
	// List of SR TE stats per BSID, IP and Color records
	TeTransitTunnelStats []*SegmentRoutingTeTransitTunnelRecord `protobuf:"bytes,1,rep,name=te_transit_tunnel_stats,json=teTransitTunnelStats" json:"te_transit_tunnel_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SrTeTransitTunnelStats) Reset()         { *m = SrTeTransitTunnelStats{} }
func (m *SrTeTransitTunnelStats) String() string { return proto.CompactTextString(m) }
func (*SrTeTransitTunnelStats) ProtoMessage()    {}
func (*SrTeTransitTunnelStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_transit_tunnel_stats_afac7e91d57e8cce, []int{0}
}
func (m *SrTeTransitTunnelStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrTeTransitTunnelStats.Unmarshal(m, b)
}
func (m *SrTeTransitTunnelStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrTeTransitTunnelStats.Marshal(b, m, deterministic)
}
func (dst *SrTeTransitTunnelStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrTeTransitTunnelStats.Merge(dst, src)
}
func (m *SrTeTransitTunnelStats) XXX_Size() int {
	return xxx_messageInfo_SrTeTransitTunnelStats.Size(m)
}
func (m *SrTeTransitTunnelStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SrTeTransitTunnelStats.DiscardUnknown(m)
}

var xxx_messageInfo_SrTeTransitTunnelStats proto.InternalMessageInfo

func (m *SrTeTransitTunnelStats) GetTeTransitTunnelStats() []*SegmentRoutingTeTransitTunnelRecord {
	if m != nil {
		return m.TeTransitTunnelStats
	}
	return nil
}

//
// SR TE Transit Tunnel statistics record
//
type SegmentRoutingTeTransitTunnelRecord struct {
	// Name of the tunnel
	TunnelName *string `protobuf:"bytes,1,req,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	// Instance Identifier for cases when RPD creates multiple instances
	InstanceIdentifier *uint32 `protobuf:"varint,2,opt,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	// Name of the counter. This is useful when an SR label has multiple counters.
	// For some scenarios like routing restart, it is possible that a new counter is
	// created in the hardware.
	CounterName *string `protobuf:"bytes,3,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// Statistics
	Stats                *SegmentRoutingTeTransitTunnelStats `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *SegmentRoutingTeTransitTunnelRecord) Reset()         { *m = SegmentRoutingTeTransitTunnelRecord{} }
func (m *SegmentRoutingTeTransitTunnelRecord) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingTeTransitTunnelRecord) ProtoMessage()    {}
func (*SegmentRoutingTeTransitTunnelRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_transit_tunnel_stats_afac7e91d57e8cce, []int{1}
}
func (m *SegmentRoutingTeTransitTunnelRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord.Unmarshal(m, b)
}
func (m *SegmentRoutingTeTransitTunnelRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingTeTransitTunnelRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord.Merge(dst, src)
}
func (m *SegmentRoutingTeTransitTunnelRecord) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord.Size(m)
}
func (m *SegmentRoutingTeTransitTunnelRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingTeTransitTunnelRecord proto.InternalMessageInfo

func (m *SegmentRoutingTeTransitTunnelRecord) GetTunnelName() string {
	if m != nil && m.TunnelName != nil {
		return *m.TunnelName
	}
	return ""
}

func (m *SegmentRoutingTeTransitTunnelRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *SegmentRoutingTeTransitTunnelRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *SegmentRoutingTeTransitTunnelRecord) GetStats() *SegmentRoutingTeTransitTunnelStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type SegmentRoutingTeTransitTunnelStats struct {
	// Packet and Byte statistics
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rates of the above counters
	PacketRate           *uint64  `protobuf:"varint,3,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	ByteRate             *uint64  `protobuf:"varint,4,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentRoutingTeTransitTunnelStats) Reset()         { *m = SegmentRoutingTeTransitTunnelStats{} }
func (m *SegmentRoutingTeTransitTunnelStats) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingTeTransitTunnelStats) ProtoMessage()    {}
func (*SegmentRoutingTeTransitTunnelStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_te_transit_tunnel_stats_afac7e91d57e8cce, []int{2}
}
func (m *SegmentRoutingTeTransitTunnelStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelStats.Unmarshal(m, b)
}
func (m *SegmentRoutingTeTransitTunnelStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelStats.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingTeTransitTunnelStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingTeTransitTunnelStats.Merge(dst, src)
}
func (m *SegmentRoutingTeTransitTunnelStats) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingTeTransitTunnelStats.Size(m)
}
func (m *SegmentRoutingTeTransitTunnelStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingTeTransitTunnelStats.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingTeTransitTunnelStats proto.InternalMessageInfo

func (m *SegmentRoutingTeTransitTunnelStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *SegmentRoutingTeTransitTunnelStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *SegmentRoutingTeTransitTunnelStats) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *SegmentRoutingTeTransitTunnelStats) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprSrTeTransitTunnelStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*SrTeTransitTunnelStats)(nil),
	Field:         44,
	Name:          "jnpr_sr_te_transit_tunnel_stats_ext",
	Tag:           "bytes,44,opt,name=jnpr_sr_te_transit_tunnel_stats_ext,json=jnprSrTeTransitTunnelStatsExt",
	Filename:      "sr_te_transit_tunnel_stats.proto",
}

func init() {
	proto.RegisterType((*SrTeTransitTunnelStats)(nil), "SrTeTransitTunnelStats")
	proto.RegisterType((*SegmentRoutingTeTransitTunnelRecord)(nil), "SegmentRoutingTeTransitTunnelRecord")
	proto.RegisterType((*SegmentRoutingTeTransitTunnelStats)(nil), "SegmentRoutingTeTransitTunnelStats")
	proto.RegisterExtension(E_JnprSrTeTransitTunnelStatsExt)
}

func init() {
	proto.RegisterFile("sr_te_transit_tunnel_stats.proto", fileDescriptor_sr_te_transit_tunnel_stats_afac7e91d57e8cce)
}

var fileDescriptor_sr_te_transit_tunnel_stats_afac7e91d57e8cce = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0x99, 0xfe, 0xe1, 0xb5, 0x93, 0xf7, 0x36, 0xd3, 0x87, 0x0d, 0x8a, 0x18, 0x52, 0x91,
	0x2c, 0x24, 0x8b, 0x2e, 0x04, 0x5d, 0x89, 0xe0, 0x42, 0x17, 0x5d, 0x4c, 0xba, 0x73, 0x31, 0x8c,
	0xe9, 0xb5, 0xc4, 0x36, 0x33, 0x61, 0xe6, 0x06, 0x5b, 0x70, 0xe5, 0x07, 0xf2, 0x83, 0xf9, 0x29,
	0x24, 0x99, 0xb6, 0x8a, 0xb4, 0xea, 0xf6, 0x9e, 0xdf, 0xb9, 0x67, 0xce, 0x65, 0x68, 0x60, 0x8d,
	0x40, 0x10, 0x68, 0xa4, 0xb2, 0x19, 0x0a, 0x2c, 0x95, 0x82, 0xb9, 0xb0, 0x28, 0xd1, 0xc6, 0x85,
	0xd1, 0xa8, 0xf7, 0x7b, 0x08, 0x73, 0xc8, 0x01, 0xcd, 0x52, 0xa0, 0x2e, 0xdc, 0x30, 0x2c, 0xe9,
	0x5e, 0x62, 0xc6, 0x30, 0x76, 0xb6, 0x71, 0xed, 0x4a, 0x2a, 0x13, 0xbb, 0xa3, 0xfd, 0x1d, 0xfb,
	0x7c, 0x12, 0x34, 0x23, 0x6f, 0x78, 0x1c, 0x27, 0x30, 0xcd, 0x41, 0x21, 0xd7, 0x25, 0x66, 0x6a,
	0xfa, 0x65, 0x0b, 0x87, 0x54, 0x9b, 0x09, 0xff, 0x8f, 0x5b, 0x96, 0x87, 0x6f, 0x84, 0x0e, 0x7e,
	0xe1, 0x66, 0x27, 0xd4, 0x5b, 0x25, 0x2b, 0x99, 0x83, 0x4f, 0x82, 0x46, 0xd4, 0xbd, 0x6a, 0xbf,
	0x5c, 0x36, 0x3a, 0x84, 0x53, 0xa7, 0x8c, 0x64, 0x0e, 0xec, 0x8c, 0xf6, 0x32, 0x65, 0x51, 0xaa,
	0x14, 0x44, 0x36, 0x01, 0x85, 0xd9, 0x43, 0x06, 0xc6, 0x6f, 0x04, 0x24, 0xfa, 0xb7, 0xe6, 0xd9,
	0x9a, 0xb8, 0xd9, 0x00, 0x2c, 0xa2, 0x7f, 0x53, 0x5d, 0x2a, 0x04, 0xe3, 0x02, 0x9a, 0x01, 0xf9,
	0x08, 0xf0, 0x56, 0x52, 0x9d, 0x70, 0x4e, 0xdb, 0xae, 0x7c, 0x2b, 0x20, 0x91, 0x37, 0x1c, 0x7c,
	0x5f, 0xbe, 0x6e, 0xc9, 0x9d, 0x23, 0x7c, 0x25, 0x34, 0xfc, 0x99, 0x66, 0x47, 0xf4, 0x4f, 0x21,
	0xd3, 0x19, 0xd4, 0x07, 0x26, 0x51, 0xab, 0x7e, 0x86, 0x4f, 0xf8, 0x7a, 0xca, 0x0e, 0x68, 0xfb,
	0x7e, 0x89, 0x60, 0xeb, 0x5a, 0x1b, 0xd9, 0xcd, 0xaa, 0x4b, 0x39, 0x4e, 0x18, 0x89, 0xae, 0x88,
	0x43, 0x02, 0xc2, 0xa9, 0x53, 0xb8, 0x44, 0x60, 0x21, 0xed, 0x56, 0x06, 0x47, 0xb5, 0x3e, 0x53,
	0x9d, 0x6a, 0x5e, 0x31, 0x17, 0xcf, 0x74, 0xf0, 0xa8, 0x0a, 0x23, 0x76, 0x7f, 0x29, 0x01, 0x0b,
	0x64, 0xfd, 0xf8, 0xb6, 0x54, 0x59, 0x01, 0x66, 0x04, 0xf8, 0xa4, 0xcd, 0xcc, 0x26, 0xa0, 0xac,
	0x36, 0xd6, 0x3f, 0xad, 0x4f, 0xd4, 0x8f, 0xb7, 0xff, 0x2c, 0x7e, 0x58, 0x2d, 0xdf, 0xae, 0x5d,
	0x2f, 0xf0, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x98, 0xa4, 0x8c, 0xae, 0xca, 0x02, 0x00, 0x00,
}
