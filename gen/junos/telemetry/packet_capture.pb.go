// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: packet_capture.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosPfePacketCapture struct {
	System               *JunosPfePacketCaptureSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *JunosPfePacketCapture) Reset()         { *m = JunosPfePacketCapture{} }
func (m *JunosPfePacketCapture) String() string { return proto.CompactTextString(m) }
func (*JunosPfePacketCapture) ProtoMessage()    {}
func (*JunosPfePacketCapture) Descriptor() ([]byte, []int) {
	return fileDescriptor_9363568d980a8875, []int{0}
}
func (m *JunosPfePacketCapture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosPfePacketCapture.Unmarshal(m, b)
}
func (m *JunosPfePacketCapture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosPfePacketCapture.Marshal(b, m, deterministic)
}
func (m *JunosPfePacketCapture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPfePacketCapture.Merge(m, src)
}
func (m *JunosPfePacketCapture) XXX_Size() int {
	return xxx_messageInfo_JunosPfePacketCapture.Size(m)
}
func (m *JunosPfePacketCapture) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPfePacketCapture.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPfePacketCapture proto.InternalMessageInfo

func (m *JunosPfePacketCapture) GetSystem() *JunosPfePacketCaptureSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosPfePacketCaptureSystemType struct {
	Linecard             *JunosPfePacketCaptureSystemTypeLinecardType `protobuf:"bytes,151,opt,name=linecard" json:"linecard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *JunosPfePacketCaptureSystemType) Reset()         { *m = JunosPfePacketCaptureSystemType{} }
func (m *JunosPfePacketCaptureSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosPfePacketCaptureSystemType) ProtoMessage()    {}
func (*JunosPfePacketCaptureSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9363568d980a8875, []int{0, 0}
}
func (m *JunosPfePacketCaptureSystemType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosPfePacketCaptureSystemType.Unmarshal(m, b)
}
func (m *JunosPfePacketCaptureSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosPfePacketCaptureSystemType.Marshal(b, m, deterministic)
}
func (m *JunosPfePacketCaptureSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPfePacketCaptureSystemType.Merge(m, src)
}
func (m *JunosPfePacketCaptureSystemType) XXX_Size() int {
	return xxx_messageInfo_JunosPfePacketCaptureSystemType.Size(m)
}
func (m *JunosPfePacketCaptureSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPfePacketCaptureSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPfePacketCaptureSystemType proto.InternalMessageInfo

func (m *JunosPfePacketCaptureSystemType) GetLinecard() *JunosPfePacketCaptureSystemTypeLinecardType {
	if m != nil {
		return m.Linecard
	}
	return nil
}

type JunosPfePacketCaptureSystemTypeLinecardType struct {
	PacketCapture        *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType `protobuf:"bytes,151,opt,name=packet_capture,json=packetCapture" json:"packet_capture,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *JunosPfePacketCaptureSystemTypeLinecardType) Reset() {
	*m = JunosPfePacketCaptureSystemTypeLinecardType{}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPfePacketCaptureSystemTypeLinecardType) ProtoMessage() {}
func (*JunosPfePacketCaptureSystemTypeLinecardType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9363568d980a8875, []int{0, 0, 0}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType.Unmarshal(m, b)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType.Marshal(b, m, deterministic)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType.Merge(m, src)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) XXX_Size() int {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType.Size(m)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardType proto.InternalMessageInfo

func (m *JunosPfePacketCaptureSystemTypeLinecardType) GetPacketCapture() *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType {
	if m != nil {
		return m.PacketCapture
	}
	return nil
}

type JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType struct {
	Packet               []*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList `protobuf:"bytes,151,rep,name=packet" json:"packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) Reset() {
	*m = JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType{}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) ProtoMessage() {}
func (*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9363568d980a8875, []int{0, 0, 0, 0}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType.Unmarshal(m, b)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType.Marshal(b, m, deterministic)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType.Merge(m, src)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) XXX_Size() int {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType.Size(m)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType proto.InternalMessageInfo

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType) GetPacket() []*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList {
	if m != nil {
		return m.Packet
	}
	return nil
}

type JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList struct {
	Id                   *uint64  `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	TotalLength          *uint64  `protobuf:"varint,52,opt,name=total_length,json=totalLength" json:"total_length,omitempty"`
	ActualLength         *uint64  `protobuf:"varint,53,opt,name=actual_length,json=actualLength" json:"actual_length,omitempty"`
	PacketData           *string  `protobuf:"bytes,54,opt,name=packet_data,json=packetData" json:"packet_data,omitempty"`
	Timestamp            *uint64  `protobuf:"varint,55,opt,name=timestamp" json:"timestamp,omitempty"`
	IflIndex             *uint32  `protobuf:"varint,56,opt,name=ifl_index,json=iflIndex" json:"ifl_index,omitempty"`
	CosQueue             *uint32  `protobuf:"varint,57,opt,name=cos_queue,json=cosQueue" json:"cos_queue,omitempty"`
	Direction            *string  `protobuf:"bytes,58,opt,name=direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) Reset() {
	*m = JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList{}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) ProtoMessage() {}
func (*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9363568d980a8875, []int{0, 0, 0, 0, 0}
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList.Unmarshal(m, b)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList.Marshal(b, m, deterministic)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList.Merge(m, src)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) XXX_Size() int {
	return xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList.Size(m)
}
func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList proto.InternalMessageInfo

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetTotalLength() uint64 {
	if m != nil && m.TotalLength != nil {
		return *m.TotalLength
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetActualLength() uint64 {
	if m != nil && m.ActualLength != nil {
		return *m.ActualLength
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetPacketData() string {
	if m != nil && m.PacketData != nil {
		return *m.PacketData
	}
	return ""
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetIflIndex() uint32 {
	if m != nil && m.IflIndex != nil {
		return *m.IflIndex
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetCosQueue() uint32 {
	if m != nil && m.CosQueue != nil {
		return *m.CosQueue
	}
	return 0
}

func (m *JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList) GetDirection() string {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return ""
}

var E_JnprJunosPfePacketCaptureExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosPfePacketCapture)(nil),
	Field:         139,
	Name:          "jnpr_junos_pfe_packet_capture_ext",
	Tag:           "bytes,139,opt,name=jnpr_junos_pfe_packet_capture_ext",
	Filename:      "packet_capture.proto",
}

func init() {
	proto.RegisterType((*JunosPfePacketCapture)(nil), "junos_pfe_packet_capture")
	proto.RegisterType((*JunosPfePacketCaptureSystemType)(nil), "junos_pfe_packet_capture.system_type")
	proto.RegisterType((*JunosPfePacketCaptureSystemTypeLinecardType)(nil), "junos_pfe_packet_capture.system_type.linecard_type")
	proto.RegisterType((*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureType)(nil), "junos_pfe_packet_capture.system_type.linecard_type.packet_capture_type")
	proto.RegisterType((*JunosPfePacketCaptureSystemTypeLinecardTypePacketCaptureTypePacketList)(nil), "junos_pfe_packet_capture.system_type.linecard_type.packet_capture_type.packet_list")
	proto.RegisterExtension(E_JnprJunosPfePacketCaptureExt)
}

func init() { proto.RegisterFile("packet_capture.proto", fileDescriptor_9363568d980a8875) }

var fileDescriptor_9363568d980a8875 = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0xd9, 0x34, 0x2d, 0xc9, 0xd9, 0xc6, 0x8b, 0xa9, 0xe2, 0xb8, 0x16, 0x4c, 0x15, 0x61,
	0xaf, 0xf6, 0xa2, 0xf5, 0xb3, 0x17, 0x22, 0x7e, 0x20, 0x16, 0x91, 0xb8, 0x7d, 0x80, 0x61, 0xd8,
	0x3d, 0xd1, 0x69, 0x37, 0x3b, 0xe3, 0xcc, 0x59, 0x4c, 0xc0, 0x2b, 0xbd, 0x12, 0xbd, 0xf7, 0xa1,
	0x7c, 0x17, 0x9f, 0x41, 0x66, 0x27, 0x69, 0x12, 0x30, 0x20, 0xd2, 0xcb, 0xf9, 0x9d, 0xff, 0xf9,
	0xfd, 0x87, 0xdd, 0x81, 0xab, 0x46, 0x16, 0xe7, 0x48, 0xa2, 0x90, 0x86, 0x1a, 0x8b, 0x99, 0xb1,
	0x9a, 0x74, 0xb2, 0x47, 0x58, 0xe1, 0x04, 0xc9, 0xce, 0x04, 0x69, 0x13, 0xe0, 0xed, 0x5f, 0xdb,
	0xc0, 0xcf, 0x9a, 0x5a, 0x3b, 0x61, 0xc6, 0x28, 0xd6, 0xf7, 0xd8, 0x13, 0xd8, 0x71, 0x33, 0x47,
	0x38, 0xe1, 0x3f, 0xa3, 0x61, 0x94, 0xc6, 0x87, 0x77, 0xb3, 0x4d, 0xd9, 0x2c, 0x04, 0x05, 0xcd,
	0x0c, 0xe6, 0xf3, 0xad, 0xe4, 0x77, 0x17, 0xe2, 0x15, 0xce, 0x46, 0xd0, 0xab, 0x54, 0x8d, 0x85,
	0xb4, 0xe5, 0xc2, 0x78, 0xf4, 0x4f, 0xc6, 0x6c, 0xb1, 0x16, 0xfc, 0x17, 0x96, 0xe4, 0x47, 0x17,
	0x06, 0x6b, 0x33, 0xa6, 0xe1, 0xca, 0xba, 0x67, 0xd1, 0xf4, 0xea, 0x3f, 0x9a, 0xb2, 0xf5, 0x60,
	0x68, 0x1f, 0x04, 0xf8, 0x3c, 0xb0, 0xe4, 0xdb, 0x16, 0xec, 0xfd, 0x25, 0xc6, 0x2a, 0xd8, 0x09,
	0xd8, 0x5f, 0x60, 0x2b, 0x8d, 0x0f, 0x4f, 0x2f, 0xe9, 0x02, 0x0b, 0x56, 0x29, 0x47, 0xf9, 0xbc,
	0x23, 0xf9, 0xda, 0x81, 0x78, 0x85, 0xb3, 0x6b, 0xd0, 0x51, 0x25, 0x3f, 0x1a, 0x46, 0x69, 0xf7,
	0xd9, 0xf6, 0x97, 0xa7, 0x9d, 0x5e, 0x94, 0x77, 0x54, 0xc9, 0x0e, 0x60, 0x97, 0x34, 0xc9, 0x4a,
	0x54, 0x58, 0xbf, 0xa7, 0x0f, 0xfc, 0x9e, 0x0f, 0xe4, 0x71, 0xcb, 0xde, 0xb4, 0x88, 0xdd, 0x81,
	0x81, 0x2c, 0xa8, 0x59, 0x66, 0xee, 0xb7, 0x99, 0xdd, 0x00, 0xe7, 0xa1, 0x5b, 0x17, 0x6d, 0xa5,
	0x24, 0xc9, 0x1f, 0x0c, 0xa3, 0xb4, 0x9f, 0x43, 0x40, 0x2f, 0x24, 0x49, 0xb6, 0x0f, 0x7d, 0x52,
	0x13, 0x74, 0x24, 0x27, 0x86, 0x3f, 0x6c, 0x0d, 0x4b, 0xc0, 0x6e, 0x42, 0x5f, 0x8d, 0x2b, 0xa1,
	0xea, 0x12, 0xa7, 0xfc, 0xd1, 0x30, 0x4a, 0x07, 0x79, 0x4f, 0x8d, 0xab, 0xd7, 0xfe, 0xec, 0x87,
	0x85, 0x76, 0xe2, 0x63, 0x83, 0x0d, 0xf2, 0xc7, 0x61, 0x58, 0x68, 0xf7, 0xce, 0x9f, 0xbd, 0xb7,
	0x54, 0x16, 0x0b, 0x52, 0xba, 0xe6, 0xc7, 0x6d, 0xed, 0x12, 0x1c, 0x7f, 0x86, 0x83, 0xb3, 0xda,
	0x58, 0xb1, 0xe9, 0x43, 0x0b, 0x9c, 0x12, 0xbb, 0x9e, 0x9d, 0x34, 0xb5, 0x32, 0x68, 0xdf, 0x22,
	0x7d, 0xd2, 0xf6, 0xdc, 0x9d, 0x62, 0xed, 0xb4, 0x75, 0xfc, 0x7b, 0x78, 0x28, 0x37, 0x36, 0xfe,
	0xa7, 0x7c, 0xdf, 0xdb, 0x4f, 0xfc, 0x74, 0x34, 0xc6, 0xd1, 0xea, 0x33, 0x78, 0x39, 0xa5, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xdf, 0x9a, 0x3c, 0x77, 0x03, 0x00, 0x00,
}
