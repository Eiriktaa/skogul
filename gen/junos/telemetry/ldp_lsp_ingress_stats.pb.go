// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ldp_lsp_ingress_stats.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
// Top-level message
//
type LdpLspIngressStats struct {
	// List of LDP LSP stats record
	LdpLspIngressStatsRecords []*LdpLspIngressRecord `protobuf:"bytes,1,rep,name=ldp_lsp_ingress_stats_records,json=ldpLspIngressStatsRecords" json:"ldp_lsp_ingress_stats_records,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}               `json:"-"`
	XXX_unrecognized          []byte                 `json:"-"`
	XXX_sizecache             int32                  `json:"-"`
}

func (m *LdpLspIngressStats) Reset()         { *m = LdpLspIngressStats{} }
func (m *LdpLspIngressStats) String() string { return proto.CompactTextString(m) }
func (*LdpLspIngressStats) ProtoMessage()    {}
func (*LdpLspIngressStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_44710a4bf6e19bef, []int{0}
}
func (m *LdpLspIngressStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpLspIngressStats.Unmarshal(m, b)
}
func (m *LdpLspIngressStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpLspIngressStats.Marshal(b, m, deterministic)
}
func (m *LdpLspIngressStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpLspIngressStats.Merge(m, src)
}
func (m *LdpLspIngressStats) XXX_Size() int {
	return xxx_messageInfo_LdpLspIngressStats.Size(m)
}
func (m *LdpLspIngressStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpLspIngressStats.DiscardUnknown(m)
}

var xxx_messageInfo_LdpLspIngressStats proto.InternalMessageInfo

func (m *LdpLspIngressStats) GetLdpLspIngressStatsRecords() []*LdpLspIngressRecord {
	if m != nil {
		return m.LdpLspIngressStatsRecords
	}
	return nil
}

//
// LDP LSP Ingress statistics record
//
type LdpLspIngressRecord struct {
	// IP prefix
	IpPrefix *string `protobuf:"bytes,1,req,name=ip_prefix,json=ipPrefix" json:"ip_prefix,omitempty"`
	// Instance Identifier for cases when RPD creates multiple instances
	InstanceIdentifier *uint32 `protobuf:"varint,2,opt,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	// Name of the counter.
	CounterName *string `protobuf:"bytes,3,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// Statistics
	Stats                *LabelDistributionProtocolLspIngressStats `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *LdpLspIngressRecord) Reset()         { *m = LdpLspIngressRecord{} }
func (m *LdpLspIngressRecord) String() string { return proto.CompactTextString(m) }
func (*LdpLspIngressRecord) ProtoMessage()    {}
func (*LdpLspIngressRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_44710a4bf6e19bef, []int{1}
}
func (m *LdpLspIngressRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpLspIngressRecord.Unmarshal(m, b)
}
func (m *LdpLspIngressRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpLspIngressRecord.Marshal(b, m, deterministic)
}
func (m *LdpLspIngressRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpLspIngressRecord.Merge(m, src)
}
func (m *LdpLspIngressRecord) XXX_Size() int {
	return xxx_messageInfo_LdpLspIngressRecord.Size(m)
}
func (m *LdpLspIngressRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpLspIngressRecord.DiscardUnknown(m)
}

var xxx_messageInfo_LdpLspIngressRecord proto.InternalMessageInfo

func (m *LdpLspIngressRecord) GetIpPrefix() string {
	if m != nil && m.IpPrefix != nil {
		return *m.IpPrefix
	}
	return ""
}

func (m *LdpLspIngressRecord) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *LdpLspIngressRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *LdpLspIngressRecord) GetStats() *LabelDistributionProtocolLspIngressStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type LabelDistributionProtocolLspIngressStats struct {
	// Packet and Byte statistics
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rates of the above counters
	PacketRate           *uint64  `protobuf:"varint,3,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	ByteRate             *uint64  `protobuf:"varint,4,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelDistributionProtocolLspIngressStats) Reset() {
	*m = LabelDistributionProtocolLspIngressStats{}
}
func (m *LabelDistributionProtocolLspIngressStats) String() string { return proto.CompactTextString(m) }
func (*LabelDistributionProtocolLspIngressStats) ProtoMessage()    {}
func (*LabelDistributionProtocolLspIngressStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_44710a4bf6e19bef, []int{2}
}
func (m *LabelDistributionProtocolLspIngressStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelDistributionProtocolLspIngressStats.Unmarshal(m, b)
}
func (m *LabelDistributionProtocolLspIngressStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelDistributionProtocolLspIngressStats.Marshal(b, m, deterministic)
}
func (m *LabelDistributionProtocolLspIngressStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelDistributionProtocolLspIngressStats.Merge(m, src)
}
func (m *LabelDistributionProtocolLspIngressStats) XXX_Size() int {
	return xxx_messageInfo_LabelDistributionProtocolLspIngressStats.Size(m)
}
func (m *LabelDistributionProtocolLspIngressStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelDistributionProtocolLspIngressStats.DiscardUnknown(m)
}

var xxx_messageInfo_LabelDistributionProtocolLspIngressStats proto.InternalMessageInfo

func (m *LabelDistributionProtocolLspIngressStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *LabelDistributionProtocolLspIngressStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *LabelDistributionProtocolLspIngressStats) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *LabelDistributionProtocolLspIngressStats) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprLdpLspIngressStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*LdpLspIngressStats)(nil),
	Field:         153,
	Name:          "jnpr_ldp_lsp_ingress_stats_ext",
	Tag:           "bytes,153,opt,name=jnpr_ldp_lsp_ingress_stats_ext",
	Filename:      "ldp_lsp_ingress_stats.proto",
}

func init() {
	proto.RegisterType((*LdpLspIngressStats)(nil), "LdpLspIngressStats")
	proto.RegisterType((*LdpLspIngressRecord)(nil), "LdpLspIngressRecord")
	proto.RegisterType((*LabelDistributionProtocolLspIngressStats)(nil), "LabelDistributionProtocolLspIngressStats")
	proto.RegisterExtension(E_JnprLdpLspIngressStatsExt)
}

func init() { proto.RegisterFile("ldp_lsp_ingress_stats.proto", fileDescriptor_44710a4bf6e19bef) }

var fileDescriptor_44710a4bf6e19bef = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0xe5, 0xfe, 0x88, 0xd6, 0x81, 0x8d, 0x83, 0x44, 0x4a, 0x05, 0x44, 0x59, 0xa0, 0xb0,
	0xc9, 0xa2, 0x0b, 0x16, 0x6c, 0x40, 0x08, 0x16, 0x45, 0x55, 0x55, 0xa5, 0x12, 0x5b, 0xcb, 0x4d,
	0x6e, 0x91, 0x69, 0x6a, 0x5b, 0xf6, 0xad, 0x68, 0xb7, 0xbc, 0xc5, 0xbc, 0xc7, 0x3c, 0xce, 0x3c,
	0xcc, 0xc8, 0xf1, 0xb4, 0xf3, 0xd3, 0x2e, 0x66, 0x7b, 0xce, 0x77, 0xae, 0x72, 0x4e, 0x4c, 0xc7,
	0x4d, 0x6d, 0x78, 0xe3, 0x0c, 0x97, 0xea, 0x8f, 0x05, 0xe7, 0xb8, 0x43, 0x81, 0xae, 0x30, 0x56,
	0xa3, 0x7e, 0x1b, 0x23, 0x34, 0xb0, 0x05, 0xb4, 0x07, 0x8e, 0xda, 0x04, 0x31, 0x6b, 0x28, 0x9b,
	0xd5, 0x66, 0xe6, 0xcc, 0x34, 0x24, 0x96, 0x3e, 0xc0, 0x7e, 0xd3, 0x77, 0x17, 0x2f, 0x71, 0x0b,
	0x95, 0xb6, 0xb5, 0x4b, 0x48, 0xda, 0xcd, 0xa3, 0xc9, 0xeb, 0xe2, 0x51, 0xb6, 0x6c, 0xcd, 0x72,
	0xd4, 0x9c, 0x1d, 0x0c, 0x8e, 0xcb, 0x6e, 0x08, 0x8d, 0x2f, 0x44, 0x58, 0x46, 0x87, 0xd2, 0x70,
	0x63, 0x61, 0x2d, 0xf7, 0x09, 0x49, 0x3b, 0xf9, 0xf0, 0x7b, 0xff, 0xff, 0xb7, 0xce, 0x80, 0x94,
	0x03, 0x69, 0x16, 0xad, 0xcc, 0x3e, 0xd3, 0x58, 0x2a, 0x87, 0x42, 0x55, 0xc0, 0x65, 0x0d, 0x0a,
	0xe5, 0x5a, 0x82, 0x4d, 0x3a, 0x29, 0xc9, 0x5f, 0x1d, 0x69, 0x76, 0x24, 0xa6, 0x27, 0x80, 0xe5,
	0xf4, 0x65, 0xa5, 0x77, 0x0a, 0xc1, 0x72, 0x25, 0xb6, 0x90, 0x74, 0x53, 0x72, 0x7f, 0x3e, 0xba,
	0xb3, 0xe6, 0x62, 0x0b, 0xec, 0x2b, 0xed, 0xb7, 0x2d, 0x93, 0x5e, 0x4a, 0xf2, 0x68, 0xf2, 0xa9,
	0x98, 0x89, 0x15, 0x34, 0x3f, 0xa4, 0x43, 0x2b, 0x57, 0x3b, 0x94, 0x5a, 0x2d, 0xfc, 0x66, 0x95,
	0x6e, 0x9e, 0xd6, 0x0b, 0xb9, 0xec, 0x9a, 0xd0, 0xfc, 0xb9, 0x19, 0xf6, 0x81, 0xbe, 0x30, 0xa2,
	0xda, 0x00, 0xfa, 0x35, 0x49, 0xde, 0x6b, 0x3f, 0x29, 0x21, 0xe5, 0x51, 0x65, 0x63, 0xda, 0x5f,
	0x1d, 0x10, 0x5c, 0x5b, 0xf1, 0x64, 0x07, 0x8d, 0x7d, 0xa4, 0x51, 0xe0, 0xb8, 0x15, 0x18, 0x4a,
	0x05, 0x24, 0x25, 0x25, 0x0d, 0x4e, 0x29, 0x10, 0xfc, 0xb2, 0x3e, 0x10, 0xa8, 0xde, 0x43, 0x6a,
	0xe0, 0x75, 0xcf, 0x7c, 0x31, 0xf4, 0xfd, 0x5f, 0x65, 0x2c, 0xbf, 0xfc, 0xcb, 0x61, 0x8f, 0xec,
	0x4d, 0xf1, 0x6b, 0xa7, 0xa4, 0x01, 0x3b, 0x07, 0xfc, 0xa7, 0xed, 0xc6, 0x2d, 0x41, 0x39, 0x6d,
	0x5d, 0x72, 0x45, 0xda, 0xa9, 0xe2, 0xe2, 0xfc, 0x11, 0x95, 0x23, 0x7f, 0xf4, 0x5c, 0xff, 0xb9,
	0xc7, 0xdb, 0x00, 0x00, 0x00, 0xff, 0xff, 0x83, 0x93, 0x18, 0xd5, 0xa8, 0x02, 0x00, 0x00,
}
