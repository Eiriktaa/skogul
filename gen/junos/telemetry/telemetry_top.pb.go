// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: telemetry_top.proto

package telemetry

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TelemetryFieldOptions struct {
	IsKey                *bool    `protobuf:"varint,1,opt,name=is_key,json=isKey" json:"is_key,omitempty"`
	IsTimestamp          *bool    `protobuf:"varint,2,opt,name=is_timestamp,json=isTimestamp" json:"is_timestamp,omitempty"`
	IsCounter            *bool    `protobuf:"varint,3,opt,name=is_counter,json=isCounter" json:"is_counter,omitempty"`
	IsGauge              *bool    `protobuf:"varint,4,opt,name=is_gauge,json=isGauge" json:"is_gauge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelemetryFieldOptions) Reset()         { *m = TelemetryFieldOptions{} }
func (m *TelemetryFieldOptions) String() string { return proto.CompactTextString(m) }
func (*TelemetryFieldOptions) ProtoMessage()    {}
func (*TelemetryFieldOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_610679feed69e1a4, []int{0}
}
func (m *TelemetryFieldOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryFieldOptions.Unmarshal(m, b)
}
func (m *TelemetryFieldOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryFieldOptions.Marshal(b, m, deterministic)
}
func (m *TelemetryFieldOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryFieldOptions.Merge(m, src)
}
func (m *TelemetryFieldOptions) XXX_Size() int {
	return xxx_messageInfo_TelemetryFieldOptions.Size(m)
}
func (m *TelemetryFieldOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryFieldOptions.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryFieldOptions proto.InternalMessageInfo

func (m *TelemetryFieldOptions) GetIsKey() bool {
	if m != nil && m.IsKey != nil {
		return *m.IsKey
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsTimestamp() bool {
	if m != nil && m.IsTimestamp != nil {
		return *m.IsTimestamp
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsCounter() bool {
	if m != nil && m.IsCounter != nil {
		return *m.IsCounter
	}
	return false
}

func (m *TelemetryFieldOptions) GetIsGauge() bool {
	if m != nil && m.IsGauge != nil {
		return *m.IsGauge
	}
	return false
}

type TelemetryStream struct {
	// router hostname
	// (or, just in the case of legacy (microkernel) PFEs, the IP address)
	SystemId *string `protobuf:"bytes,1,req,name=system_id,json=systemId" json:"system_id,omitempty"`
	// line card / RE (slot number). For RE, it will be 65535
	ComponentId *uint32 `protobuf:"varint,2,opt,name=component_id,json=componentId" json:"component_id,omitempty"`
	// PFE (if applicable)
	SubComponentId *uint32 `protobuf:"varint,3,opt,name=sub_component_id,json=subComponentId" json:"sub_component_id,omitempty"`
	// Overload sensor name with "senor name, internal path, external path
	// and component" seperated by ":". For RE sensors, component will be
	// daemon-name and for PFE sensors it will be "PFE".
	SensorName *string `protobuf:"bytes,4,opt,name=sensor_name,json=sensorName" json:"sensor_name,omitempty"`
	// sequence number, monotonically increasing for each
	// system_id, component_id, sub_component_id + sensor_name.
	SequenceNumber *uint32 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	// timestamp (milliseconds since 00:00:00 UTC 1/1/1970)
	Timestamp *uint64 `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
	// major version
	VersionMajor *uint32 `protobuf:"varint,7,opt,name=version_major,json=versionMajor" json:"version_major,omitempty"`
	// minor version
	VersionMinor *uint32 `protobuf:"varint,8,opt,name=version_minor,json=versionMinor" json:"version_minor,omitempty"`
	// end-of-message marker, set to true when the end of wrap is reached
	Eom                  *bool              `protobuf:"varint,9,opt,name=eom" json:"eom,omitempty"`
	Ietf                 *IETFSensors       `protobuf:"bytes,100,opt,name=ietf" json:"ietf,omitempty"`
	Enterprise           *EnterpriseSensors `protobuf:"bytes,101,opt,name=enterprise" json:"enterprise,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TelemetryStream) Reset()         { *m = TelemetryStream{} }
func (m *TelemetryStream) String() string { return proto.CompactTextString(m) }
func (*TelemetryStream) ProtoMessage()    {}
func (*TelemetryStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_610679feed69e1a4, []int{1}
}
func (m *TelemetryStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryStream.Unmarshal(m, b)
}
func (m *TelemetryStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryStream.Marshal(b, m, deterministic)
}
func (m *TelemetryStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryStream.Merge(m, src)
}
func (m *TelemetryStream) XXX_Size() int {
	return xxx_messageInfo_TelemetryStream.Size(m)
}
func (m *TelemetryStream) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryStream.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryStream proto.InternalMessageInfo

func (m *TelemetryStream) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *TelemetryStream) GetComponentId() uint32 {
	if m != nil && m.ComponentId != nil {
		return *m.ComponentId
	}
	return 0
}

func (m *TelemetryStream) GetSubComponentId() uint32 {
	if m != nil && m.SubComponentId != nil {
		return *m.SubComponentId
	}
	return 0
}

func (m *TelemetryStream) GetSensorName() string {
	if m != nil && m.SensorName != nil {
		return *m.SensorName
	}
	return ""
}

func (m *TelemetryStream) GetSequenceNumber() uint32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *TelemetryStream) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *TelemetryStream) GetVersionMajor() uint32 {
	if m != nil && m.VersionMajor != nil {
		return *m.VersionMajor
	}
	return 0
}

func (m *TelemetryStream) GetVersionMinor() uint32 {
	if m != nil && m.VersionMinor != nil {
		return *m.VersionMinor
	}
	return 0
}

func (m *TelemetryStream) GetEom() bool {
	if m != nil && m.Eom != nil {
		return *m.Eom
	}
	return false
}

func (m *TelemetryStream) GetIetf() *IETFSensors {
	if m != nil {
		return m.Ietf
	}
	return nil
}

func (m *TelemetryStream) GetEnterprise() *EnterpriseSensors {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

type IETFSensors struct {
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *IETFSensors) Reset()         { *m = IETFSensors{} }
func (m *IETFSensors) String() string { return proto.CompactTextString(m) }
func (*IETFSensors) ProtoMessage()    {}
func (*IETFSensors) Descriptor() ([]byte, []int) {
	return fileDescriptor_610679feed69e1a4, []int{2}
}

var extRange_IETFSensors = []proto.ExtensionRange{
	{Start: 1, End: 536870911},
}

func (*IETFSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_IETFSensors
}

func (m *IETFSensors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IETFSensors.Unmarshal(m, b)
}
func (m *IETFSensors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IETFSensors.Marshal(b, m, deterministic)
}
func (m *IETFSensors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IETFSensors.Merge(m, src)
}
func (m *IETFSensors) XXX_Size() int {
	return xxx_messageInfo_IETFSensors.Size(m)
}
func (m *IETFSensors) XXX_DiscardUnknown() {
	xxx_messageInfo_IETFSensors.DiscardUnknown(m)
}

var xxx_messageInfo_IETFSensors proto.InternalMessageInfo

type EnterpriseSensors struct {
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *EnterpriseSensors) Reset()         { *m = EnterpriseSensors{} }
func (m *EnterpriseSensors) String() string { return proto.CompactTextString(m) }
func (*EnterpriseSensors) ProtoMessage()    {}
func (*EnterpriseSensors) Descriptor() ([]byte, []int) {
	return fileDescriptor_610679feed69e1a4, []int{3}
}

var extRange_EnterpriseSensors = []proto.ExtensionRange{
	{Start: 1, End: 536870911},
}

func (*EnterpriseSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_EnterpriseSensors
}

func (m *EnterpriseSensors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterpriseSensors.Unmarshal(m, b)
}
func (m *EnterpriseSensors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterpriseSensors.Marshal(b, m, deterministic)
}
func (m *EnterpriseSensors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterpriseSensors.Merge(m, src)
}
func (m *EnterpriseSensors) XXX_Size() int {
	return xxx_messageInfo_EnterpriseSensors.Size(m)
}
func (m *EnterpriseSensors) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterpriseSensors.DiscardUnknown(m)
}

var xxx_messageInfo_EnterpriseSensors proto.InternalMessageInfo

type JuniperNetworksSensors struct {
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *JuniperNetworksSensors) Reset()         { *m = JuniperNetworksSensors{} }
func (m *JuniperNetworksSensors) String() string { return proto.CompactTextString(m) }
func (*JuniperNetworksSensors) ProtoMessage()    {}
func (*JuniperNetworksSensors) Descriptor() ([]byte, []int) {
	return fileDescriptor_610679feed69e1a4, []int{4}
}

var extRange_JuniperNetworksSensors = []proto.ExtensionRange{
	{Start: 1, End: 536870911},
}

func (*JuniperNetworksSensors) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_JuniperNetworksSensors
}

func (m *JuniperNetworksSensors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JuniperNetworksSensors.Unmarshal(m, b)
}
func (m *JuniperNetworksSensors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JuniperNetworksSensors.Marshal(b, m, deterministic)
}
func (m *JuniperNetworksSensors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JuniperNetworksSensors.Merge(m, src)
}
func (m *JuniperNetworksSensors) XXX_Size() int {
	return xxx_messageInfo_JuniperNetworksSensors.Size(m)
}
func (m *JuniperNetworksSensors) XXX_DiscardUnknown() {
	xxx_messageInfo_JuniperNetworksSensors.DiscardUnknown(m)
}

var xxx_messageInfo_JuniperNetworksSensors proto.InternalMessageInfo

var E_TelemetryOptions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.FieldOptions)(nil),
	ExtensionType: (*TelemetryFieldOptions)(nil),
	Field:         1024,
	Name:          "telemetry_options",
	Tag:           "bytes,1024,opt,name=telemetry_options",
	Filename:      "telemetry_top.proto",
}

var E_JuniperNetworks = &proto.ExtensionDesc{
	ExtendedType:  (*EnterpriseSensors)(nil),
	ExtensionType: (*JuniperNetworksSensors)(nil),
	Field:         2636,
	Name:          "juniperNetworks",
	Tag:           "bytes,2636,opt,name=juniperNetworks",
	Filename:      "telemetry_top.proto",
}

func init() {
	proto.RegisterType((*TelemetryFieldOptions)(nil), "TelemetryFieldOptions")
	proto.RegisterType((*TelemetryStream)(nil), "TelemetryStream")
	proto.RegisterType((*IETFSensors)(nil), "IETFSensors")
	proto.RegisterType((*EnterpriseSensors)(nil), "EnterpriseSensors")
	proto.RegisterType((*JuniperNetworksSensors)(nil), "JuniperNetworksSensors")
	proto.RegisterExtension(E_TelemetryOptions)
	proto.RegisterExtension(E_JuniperNetworks)
}

func init() { proto.RegisterFile("telemetry_top.proto", fileDescriptor_610679feed69e1a4) }

var fileDescriptor_610679feed69e1a4 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xe5, 0xfc, 0x69, 0x9d, 0x49, 0xda, 0xa4, 0x0b, 0x6d, 0x17, 0xa4, 0x48, 0xc6, 0x95,
	0x20, 0xe2, 0xe0, 0x48, 0x3d, 0xf6, 0x84, 0xa8, 0x5a, 0x14, 0x10, 0x41, 0x72, 0x23, 0xae, 0x96,
	0x13, 0x4f, 0xa3, 0x6d, 0x63, 0xaf, 0xd9, 0x59, 0x83, 0x72, 0x8b, 0xb8, 0xf2, 0x85, 0xf8, 0x10,
	0x7c, 0x28, 0xe4, 0x75, 0x9c, 0x38, 0x6d, 0x6e, 0xde, 0x37, 0xbf, 0x79, 0x7a, 0xbb, 0x7e, 0xf0,
	0x42, 0xe3, 0x02, 0x63, 0xd4, 0x6a, 0x19, 0x68, 0x99, 0x7a, 0xa9, 0x92, 0x5a, 0xbe, 0x76, 0xe6,
	0x52, 0xce, 0x17, 0x38, 0x34, 0xa7, 0x69, 0x76, 0x3f, 0x8c, 0x90, 0x66, 0x4a, 0xa4, 0x5a, 0xaa,
	0x82, 0x70, 0xff, 0x58, 0x70, 0x3a, 0x29, 0x37, 0x6f, 0x05, 0x2e, 0xa2, 0x6f, 0xa9, 0x16, 0x32,
	0x21, 0x76, 0x0a, 0x07, 0x82, 0x82, 0x47, 0x5c, 0x72, 0xcb, 0xb1, 0x06, 0xb6, 0xdf, 0x14, 0xf4,
	0x05, 0x97, 0xec, 0x0d, 0x74, 0x04, 0x05, 0x5a, 0xc4, 0x48, 0x3a, 0x8c, 0x53, 0x5e, 0x33, 0xc3,
	0xb6, 0xa0, 0x49, 0x29, 0xb1, 0x3e, 0x80, 0xa0, 0x60, 0x26, 0xb3, 0x44, 0xa3, 0xe2, 0x75, 0x03,
	0xb4, 0x04, 0x5d, 0x17, 0x02, 0x7b, 0x05, 0xb6, 0xa0, 0x60, 0x1e, 0x66, 0x73, 0xe4, 0x0d, 0x33,
	0x3c, 0x14, 0xf4, 0x29, 0x3f, 0xba, 0x7f, 0xeb, 0xd0, 0xdd, 0xa4, 0xb9, 0xd3, 0x0a, 0xc3, 0x98,
	0xb9, 0xd0, 0xa2, 0x25, 0x69, 0x8c, 0x03, 0x11, 0x71, 0xcb, 0xa9, 0x0d, 0x5a, 0x1f, 0x9b, 0xbf,
	0x3f, 0xd4, 0x6c, 0xcb, 0xb7, 0x0b, 0x7d, 0x14, 0xb1, 0x01, 0x74, 0x66, 0x32, 0x4e, 0x65, 0x82,
	0x89, 0xce, 0xb1, 0x3c, 0xd4, 0x51, 0x89, 0xb5, 0x37, 0xa3, 0x51, 0xc4, 0x86, 0xd0, 0xa3, 0x6c,
	0x1a, 0xec, 0xd0, 0xf5, 0x2a, 0x7d, 0x4c, 0xd9, 0xf4, 0xba, 0xb2, 0xf0, 0x16, 0xda, 0x84, 0x09,
	0x49, 0x15, 0x24, 0x61, 0x5c, 0x04, 0xde, 0x04, 0x80, 0x62, 0x32, 0x0e, 0x63, 0x64, 0xef, 0xa0,
	0x4b, 0xf8, 0x23, 0xc3, 0x64, 0x86, 0x41, 0x92, 0xc5, 0x53, 0x54, 0xbc, 0x99, 0xfb, 0xfa, 0xc7,
	0xa5, 0x3c, 0x36, 0x2a, 0xbb, 0x80, 0xd6, 0xf6, 0xf5, 0x0e, 0x1c, 0x6b, 0xd0, 0x30, 0x76, 0x3d,
	0xcb, 0xdf, 0xea, 0xec, 0x02, 0x8e, 0x7e, 0xa2, 0x22, 0x21, 0x93, 0x20, 0x0e, 0x1f, 0xa4, 0xe2,
	0x87, 0xc6, 0xab, 0xb3, 0x16, 0xbf, 0xe6, 0xda, 0x0e, 0x24, 0x12, 0xa9, 0xb8, 0xbd, 0x0b, 0xe5,
	0x1a, 0xeb, 0x41, 0x1d, 0x65, 0xcc, 0x5b, 0xe6, 0xa1, 0xf3, 0x4f, 0xe6, 0x40, 0x43, 0xa0, 0xbe,
	0xe7, 0x91, 0x63, 0x0d, 0xda, 0x97, 0x1d, 0x6f, 0x74, 0x33, 0xb9, 0xbd, 0x33, 0x17, 0x21, 0xdf,
	0x4c, 0xd8, 0x25, 0x00, 0xe6, 0xbf, 0x2a, 0x55, 0x82, 0x90, 0xa3, 0xe1, 0x98, 0x77, 0xb3, 0x91,
	0x4a, 0xba, 0x42, 0xb9, 0xe7, 0xd0, 0xae, 0x18, 0xbd, 0xb7, 0x6d, 0xab, 0xb7, 0x5a, 0xad, 0x56,
	0x35, 0xb7, 0x0f, 0x27, 0xcf, 0x36, 0x2b, 0x63, 0x17, 0xce, 0x3e, 0x67, 0x89, 0x48, 0x51, 0x8d,
	0x51, 0xff, 0x92, 0xea, 0x91, 0x9e, 0x31, 0x57, 0x33, 0x38, 0xd9, 0xb6, 0x5b, 0xae, 0xfb, 0xd9,
	0xf7, 0x8a, 0x72, 0x7b, 0x65, 0xb9, 0xbd, 0x6a, 0x7d, 0xf9, 0xca, 0x36, 0xb1, 0xcf, 0xbc, 0xbd,
	0xed, 0xf6, 0x7b, 0x1b, 0xc3, 0xb5, 0x72, 0xf5, 0x1d, 0xba, 0x0f, 0xbb, 0x41, 0xd8, 0x9e, 0x3b,
	0xf3, 0x7f, 0x2f, 0x8d, 0xef, 0xb9, 0xb7, 0x3f, 0xb5, 0xff, 0xd4, 0xe4, 0x7f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5d, 0xc6, 0x5d, 0x81, 0x99, 0x03, 0x00, 0x00,
}
